{
"#pragma parameter blur_soft_x \"Blur Soft X\" 10.0 1.0 20.0 1.0\n"
"#ifdef PARAMETER_UNIFORM\n"
"uniform float blur_soft_x;\n"
"#else\n"
"#define blur_soft_x 10.0\n"
"#endif\n"
"\n"
"struct input\n"
"{\n"
"   float2 video_size;\n"
"   float2 texture_size;\n"
"   float2 output_size;\n"
"   float frame_count;\n"
"   float frame_direction;\n"
"   float frame_rotation;\n"
"};\n"
"\n"
"void main_vertex\n"
"(\n"
"   float4 position : POSITION,\n"
"   out float4 oPosition : POSITION,\n"
"   uniform float4x4 modelViewProj,\n"
"\n"
"   float4 color : COLOR,\n"
"   out float4 oColor : COLOR,\n"
"\n"
"   float2 tex : TEXCOORD,\n"
"   out float2 oTex : TEXCOORD,\n"
"\n"
"   uniform input IN\n"
")\n"
"{\n"
"   oPosition = mul(modelViewProj, position);\n"
"   oColor = color;\n"
"   oTex = tex;\n"
"}\n"
"\n"
"float4 main_fragment (\n"
"   float2 tex : TEXCOORD0,\n"
"   uniform sampler2D s0 : TEXUNIT0,\n"
"   uniform input IN) : COLOR\n"
"{\n"
"\n"
" float4 big = float4(tex2D(s0, tex));\n"
"	big += pow(tex2D(s0, float2(tex.x + 1.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x - 1.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x + 2.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x - 2.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x + 4.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x - 4.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x + 8.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big += pow(tex2D(s0, float2(tex.x - 8.0 * 0.0001 * blur_soft_x, tex.y)), 2.2);\n"
"	big /= float4(9.0);\n"
"	big = pow(big, 1.0/2.2);\n"
"\n"
"   return float4(big);\n"
"}\n"
},
