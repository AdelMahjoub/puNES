"struct input\n"
"{\n"
"   float2 video_size;\n"
"   float2 texture_size;\n"
"   float2 output_size;\n"
"   float frame_count;\n"
"   float frame_direction;\n"
"   float frame_rotation;\n"
"};\n"
"\n"
"struct passprev\n"
"{\n"
"sampler2D texture : TEXUNIT1;\n"
"float2 texture_size;\n"
"float2 video_size;\n"
"};\n"
"\n"
"void main_vertex\n"
"(\n"
"   float4 position : POSITION,\n"
"   out float4 oPosition : POSITION,\n"
"   uniform float4x4 modelViewProj,\n"
"\n"
"   float4 color : COLOR,\n"
"   out float4 oColor : COLOR,\n"
"\n"
"   float2 tex : TEXCOORD,\n"
"   out float2 oTex : TEXCOORD,\n"
"\n"
"   float2 tex_border : TEXCOORD1,\n"
"   out float2 otex_border : TEXCOORD1,\n"
"\n"
"   float2 tex2 : TEXCOORD2,\n"
"   out float2 oTex2 : TEXCOORD2,\n"
"\n"
"   uniform input IN,\n"
"   uniform input PASSPREV3\n"
")\n"
"{\n"
"   oPosition = mul(modelViewProj, position);\n"
"   oColor = color;\n"
"   float2 shift = 0.5 * PASSPREV3.video_size / PASSPREV3.texture_size;\n"
"   oTex2 = ((tex2 - shift) / 1.0) + 2.0 * shift;  \n"
"   float2 out_res = float2(out_res_x, out_res_y);\n"
"   float2 corrected_size = float2(in_res_x, in_res_y);\n"
"   float2 scale = (IN.output_size / corrected_size) / box_scale;\n"
"   float2 middle = location * IN.video_size / IN.texture_size;\n"
"   float2 diff = tex.xy - middle;\n"
"   oTex = middle + diff * scale;\n"
"\n"
"   middle = float2(0.49999, 0.49999);\n"
"   float2 dist = tex_border - middle;\n"
"   otex_border = middle + dist * IN.output_size / out_res;\n"
"}\n"
"\n"
"float4 conv_background(float4 back, float2 coord, float frame_count)\n"
"{\n"
"   return float4(back.rgb, back.a);\n"
"}\n"
"\n"
"float4 main_fragment (\n"
"   float2 tex : TEXCOORD0, float2 tex_border : TEXCOORD1, float2 tex2 : TEXCOORD2,\n"
"   uniform passprev PASSPREV3,\n"
"   uniform sampler2D bg,\n"
"   uniform sampler2D s0 : TEXUNIT0,\n"
"   uniform input IN) : COLOR\n"
"{\n"
" float2 shift = 0.5 * PASSPREV3.video_size / PASSPREV3.texture_size;\n"
" float4 big = float4(tex2D(s0, ((tex - shift) / border_zoom) + shift));\n"
" float4 frame = tex2D(PASSPREV3.texture, tex);\n"
" float4 background = conv_background(tex2D(bg, tex_border), tex_border, IN.frame_count);\n"
"   return lerp(frame, big, background.a);\n"
"}\n"

