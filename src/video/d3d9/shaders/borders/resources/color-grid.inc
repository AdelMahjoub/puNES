"\n"
"// Based on Color Grid Shadertoy - https://www.shadertoy.com/view/4dBSRK\n"
"// Created by inigo quilez - iq/2014\n"
"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n"
"\n"
"struct input\n"
"{\n"
"   float2 video_size;\n"
"   float2 texture_size;\n"
"   float2 output_size;\n"
"   float frame_count;\n"
"   float frame_direction;\n"
"   float frame_rotation;\n"
"};\n"
"\n"
"void main_vertex\n"
"(\n"
"   float4 position : POSITION,\n"
"   out float4 oPosition : POSITION,\n"
"   uniform float4x4 modelViewProj,\n"
"\n"
"   float4 color : COLOR,\n"
"   out float4 oColor : COLOR,\n"
"\n"
"   float2 tex : TEXCOORD,\n"
"   out float2 oTex : TEXCOORD,\n"
"\n"
"   float2 tex_border : TEXCOORD1,\n"
"   out float2 otex_border : TEXCOORD1,\n"
"\n"
"   uniform input IN\n"
")\n"
"{\n"
"   oPosition = mul(modelViewProj, position);\n"
"   oColor = color;\n"
"   \n"
"   float2 out_res = float2(out_res_x, out_res_y);\n"
"   float2 corrected_size = float2(in_res_x, in_res_y) * (box_scale / box_scale);\n"
"   float2 scale = (IN.output_size / corrected_size) / box_scale;\n"
"   float2 middle = location * IN.video_size / IN.texture_size;\n"
"   float2 diff = tex.xy - middle;\n"
"   oTex = middle + diff * scale;\n"
"\n"
"   middle = float2(0.49999, 0.49999);\n"
"   float2 dist = tex_border - middle;\n"
"   otex_border = middle + dist * IN.output_size / out_res;\n"
"}\n"
"\n"
"float4 conv_background(float4 back, float2 coord, float frame_count)\n"
"{\n"
"   return float4(back.rgb, back.a);\n"
"}\n"
"\n"
"float4 main_fragment (\n"
"   float2 tex : TEXCOORD0, float2 tex_border : TEXCOORD1,\n"
"   uniform sampler2D s0 : TEXUNIT0,\n"
"   uniform sampler2D bg,\n"
"   uniform input IN) : COLOR\n"
"{\n"
"    float2  px = 1000.0 *(-IN.texture_size.xy + 2.0 * ZOOM * (tex.xy*(IN.texture_size.xy/IN.video_size.xy)).xy) / IN.texture_size.y;\n"
"	\n"
"    float id = 0.5 + 0.5*cos(IN.frame_count * 0.01 * SPEED + sin(dot(floor(px+0.5),float2(113.1,17.81)))*43758.545);\n"
"    \n"
"    float3  co = 0.5 + 0.5*cos(IN.frame_count * 0.01 + 3.5*id + float3(0.0,1.57,3.14) );\n"
"    \n"
"    float2  pa = smoothstep( 0.0, 0.2, id*(0.5 + 0.5*cos(6.2831*px)) );\n"
"\n"
"	float4 colorgrid = float4( co*pa.x*pa.y, 1.0 );\n"
"	\n"
"   float4 frame = tex2D(s0, tex);\n"
"   float2 fragcoord = tex.xy * (IN.texture_size.xy/IN.video_size.xy);\n"
"   float4 background = conv_background(tex2D(bg, tex_border), tex_border, IN.frame_count);\n"
"   if (fragcoord.x < 1.0 && fragcoord.x > 0.0 && fragcoord.y < 1.0 && fragcoord.y > 0.0 && border_on_top > 0.5)\n"
"   background.a *= 0.0;\n"
"   return lerp(frame, colorgrid, background.a);\n"
"}\n"

