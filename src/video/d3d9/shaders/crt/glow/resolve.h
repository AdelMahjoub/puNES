{
"struct prev\n"
"{\n"
"   uniform float2 video_size;\n"
"   uniform float2 texture_size;\n"
"   uniform sampler2D texture;\n"
"   float2 tex_coord;\n"
"};\n"
"\n"
"struct input\n"
"{\n"
"   float2 video_size;\n"
"   float2 texture_size;\n"
"};\n"
"\n"
"struct VertexData\n"
"{\n"
"   float2 tex;\n"
"   float2 prev;\n"
"};\n"
"\n"
"#define CRT_PASS PASSPREV4\n"
"\n"
"void main_vertex\n"
"(\n"
"	float4 position : POSITION,\n"
"	float2 texCoord : TEXCOORD0,\n"
"   prev CRT_PASS,\n"
"\n"
"   uniform float4x4 modelViewProj,\n"
"\n"
"	out float4 oPosition : POSITION,\n"
"   out VertexData vert\n"
")\n"
"{\n"
"	oPosition = mul(modelViewProj, position);\n"
"\n"
"   vert.tex = texCoord;\n"
"   vert.prev = CRT_PASS.tex_coord;\n"
"}\n"
"\n"
"// For debugging\n"
"#define BLOOM_ONLY 0\n"
"\n"
"#pragma parameter BLOOM_STRENGTH \"Glow Strength\" 0.45 0.0 0.8 0.05\n"
"#pragma parameter OUTPUT_GAMMA \"Monitor Gamma\" 2.2 1.8 2.6 0.02\n"
"#ifdef PARAMETER_UNIFORM\n"
"uniform float BLOOM_STRENGTH;\n"
"uniform float OUTPUT_GAMMA;\n"
"#else\n"
"#define BLOOM_STRENGTH 0.45\n"
"#define OUTPUT_GAMMA 2.2\n"
"#endif\n"
"\n"
"float4 main_fragment(in VertexData vert, uniform sampler2D s0 : TEXUNIT0, uniform input IN, prev CRT_PASS) : COLOR\n"
"{\n"
"#if BLOOM_ONLY\n"
"   float3 source = BLOOM_STRENGTH * tex2D(s0, vert.tex).rgb;\n"
"#else\n"
"   float3 source = 1.15 * tex2D(CRT_PASS.texture, vert.prev).rgb;\n"
"   float3 bloom = tex2D(s0, vert.tex).rgb;\n"
"   source += BLOOM_STRENGTH * bloom;\n"
"#endif\n"
"   return float4(pow(saturate(source), 1.0 / OUTPUT_GAMMA), 1.0);\n"
"}\n"
"\n"
},
