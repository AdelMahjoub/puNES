{
"/* COMPATIBILITY \n"
"   - HLSL compilers\n"
"   - Cg   compilers\n"
"*/\n"
"\n"
"const static float3 dtt = float3(65536,255,1);\n"
"\n"
"float reduce(float3 color)\n"
"{\n"
"	return dot(color, dtt);\n"
"}\n"
"\n"
"struct input\n"
"{\n"
"	float2 video_size;\n"
"	float2 texture_size;\n"
"	float2 output_size;\n"
"        float  frame_count;\n"
"        float  frame_direction;\n"
"	float frame_rotation;\n"
"};\n"
"\n"
"\n"
"struct out_vertex {\n"
"	float4 position : POSITION;\n"
"	float2 texCoord : TEXCOORD0;\n"
"	float4 t1 : TEXCOORD1;\n"
"	float4 t2 : TEXCOORD2;\n"
"	float4 t3 : TEXCOORD3;\n"
"	float4 t4 : TEXCOORD4;\n"
"	float4 t5 : TEXCOORD5;\n"
"	float4 t6 : TEXCOORD6;\n"
"	float4 t7 : TEXCOORD7;\n"
"};\n"
"\n"
"float4 t8       : TEXCOORD8;\n"
"\n"
"/*    VERTEX_SHADER    */\n"
"out_vertex main_vertex\n"
"(\n"
"	float4 position	: POSITION,\n"
"	float2 texCoord : TEXCOORD0,\n"
"\n"
"   	uniform float4x4 modelViewProj,\n"
"	uniform input IN\n"
")\n"
"{\n"
"	out_vertex OUT = (out_vertex)0;\n"
"\n"
"	OUT.position = mul(modelViewProj, position);\n"
"\n"
"	float2 ps = float2(1.0/IN.texture_size.x, 1.0/IN.texture_size.y);\n"
"	float dx = ps.x;\n"
"	float dy = ps.y;\n"
"\n"
"	OUT.texCoord = texCoord;\n"
"	OUT.t1.xy = texCoord + float2(-dx,-dy);\n"
"	OUT.t1.zw = texCoord + float2(-dx,  0);\n"
"	OUT.t2.xy = texCoord + float2(+dx,-dy);\n"
"	OUT.t2.zw = texCoord + float2(+dx+dx,-dy);\n"
"	OUT.t3.xy = texCoord + float2(-dx,  0);\n"
"	OUT.t3.zw = texCoord + float2(+dx,  0);\n"
"	OUT.t4.xy = texCoord + float2(+dx+dx,  0);\n"
"	OUT.t4.zw = texCoord + float2(-dx,+dy);\n"
"	OUT.t5.xy = texCoord + float2(  0,+dy);\n"
"	OUT.t5.zw = texCoord + float2(+dx,+dy);\n"
"	OUT.t6.xy = texCoord + float2(+dx+dx,+dy);\n"
"	OUT.t6.zw = texCoord + float2(-dx,+dy+dy);\n"
"	OUT.t7.xy = texCoord + float2(  0,+dy+dy);\n"
"	OUT.t7.zw = texCoord + float2(+dx,+dy+dy);\n"
"	t8.xy = texCoord + float2(+dx+dx,+dy+dy);\n"
"\n"
"	return OUT;\n"
"}\n"
"\n"
"/*  GET_RESULT function                            */\n"
"/*  Copyright (c) 1999-2001 by Derek Liauw Kie Fa  */\n"
"/*  License: GNU-GPL                               */\n"
"int GET_RESULT(float A, float B, float C, float D)\n"
"{\n"
"   int x = 0; int y = 0; int r = 0;\n"
"   if (A == C) x+=1; else if (B == C) y+=1;\n"
"   if (A == D) x+=1; else if (B == D) y+=1;\n"
"   if (x <= 1) r+=1; \n"
"   if (y <= 1) r-=1;\n"
"   return r;\n"
"} \n"
"\n"
"float4 main_fragment(in out_vertex VAR, uniform sampler2D decal : TEXUNIT0, uniform input IN) : COLOR\n"
"{\n"
"   float2 fp = frac(VAR.texCoord*IN.texture_size);\n"
"\n"
"   // Reading the texels\n"
"\n"
"   float3 C0 = tex2D(decal,VAR.t1.xy).xyz; \n"
"   float3 C1 = tex2D(decal,VAR.t1.zw).xyz;\n"
"   float3 C2 = tex2D(decal,VAR.t2.xy).xyz;\n"
"   float3 D3 = tex2D(decal,VAR.t2.zw).xyz;\n"
"   float3 C3 = tex2D(decal,VAR.t3.xy).xyz;\n"
"   float3 C4 = tex2D(decal,VAR.texCoord).xyz;\n"
"   float3 C5 = tex2D(decal,VAR.t3.zw).xyz;\n"
"   float3 D4 = tex2D(decal,VAR.t4.xy).xyz;\n"
"   float3 C6 = tex2D(decal,VAR.t4.zw).xyz;\n"
"   float3 C7 = tex2D(decal,VAR.t5.xy).xyz;\n"
"   float3 C8 = tex2D(decal,VAR.t5.zw).xyz;\n"
"   float3 D5 = tex2D(decal,VAR.t6.xy).xyz;\n"
"   float3 D0 = tex2D(decal,VAR.t6.zw).xyz;\n"
"   float3 D1 = tex2D(decal,VAR.t7.xy).xyz;\n"
"   float3 D2 = tex2D(decal,VAR.t7.zw).xyz;\n"
"   float3 D6 = tex2D(decal,t8.xy).xyz;\n"
"\n"
"   float3 p00,p10,p01,p11;\n"
"\n"
"   // reducing float3 to float	\n"
"   float c0 = reduce(C0);float c1 = reduce(C1);\n"
"   float c2 = reduce(C2);float c3 = reduce(C3);\n"
"   float c4 = reduce(C4);float c5 = reduce(C5);\n"
"   float c6 = reduce(C6);float c7 = reduce(C7);\n"
"   float c8 = reduce(C8);float d0 = reduce(D0);\n"
"   float d1 = reduce(D1);float d2 = reduce(D2);\n"
"   float d3 = reduce(D3);float d4 = reduce(D4);\n"
"   float d5 = reduce(D5);float d6 = reduce(D6);\n"
"\n"
"   /*              SuperEagle code               */\n"
"   /*  Copied from the Dosbox source code        */\n"
"   /*  Copyright (C) 2002-2007  The DOSBox Team  */\n"
"   /*  License: GNU-GPL                          */\n"
"   /*  Adapted by guest(r) on 16.4.2007          */       \n"
"   if (c4 != c8) {\n"
"      if (c7 == c5) {\n"
"         p01 = p10 = C7;\n"
"         if ((c6 == c7) || (c5 == c2)) {\n"
"            p00 = 0.25*(3.0*C7+C4);\n"
"         } else {\n"
"            p00 = 0.5*(C4+C5);\n"
"         }\n"
"\n"
"         if ((c5 == d4) || (c7 == d1)) {\n"
"            p11 = 0.25*(3.0*C7+C8);\n"
"         } else {\n"
"            p11 = 0.5*(C7+C8);\n"
"         }\n"
"      } else {\n"
"         p11 = 0.125*(6.0*C8+C7+C5);\n"
"         p00 = 0.125*(6.0*C4+C7+C5);\n"
"\n"
"         p10 = 0.125*(6.0*C7+C4+C8);\n"
"         p01 = 0.125*(6.0*C5+C4+C8);\n"
"      }\n"
"   } else {\n"
"      if (c7 != c5) {\n"
"         p11 = p00 = C4;\n"
"\n"
"         if ((c1 == c4) || (c8 == d5)) {\n"
"            p01 = 0.25*(3.0*C4+C5);\n"
"         } else {\n"
"            p01 = 0.5*(C4+C5);\n"
"         }\n"
"\n"
"         if ((c8 == d2) || (c3 == c4)) {\n"
"            p10 = 0.25*(3.0*C4+C7);\n"
"         } else {\n"
"            p10 = 0.5*(C7+C8);\n"
"         }\n"
"      } else {\n"
"         int r = 0;\n"
"         r += GET_RESULT(c5,c4,c6,d1);\n"
"         r += GET_RESULT(c5,c4,c3,c1);\n"
"         r += GET_RESULT(c5,c4,d2,d5);\n"
"         r += GET_RESULT(c5,c4,c2,d4);\n"
"\n"
"         if (r > 0) {\n"
"            p01 = p10 = C7;\n"
"            p00 = p11 = 0.5*(C4+C5);\n"
"         } else if (r < 0) {\n"
"            p11 = p00 = C4;\n"
"            p01 = p10 = 0.5*(C4+C5);\n"
"         } else {\n"
"            p11 = p00 = C4;\n"
"            p01 = p10 = C7;\n"
"         }\n"
"      }\n"
"   }\n"
"\n"
"\n"
"\n"
"   // Distributing the four products\n"
"\n"
"   p10 = (fp.x < 0.50) ? (fp.y < 0.50 ? p00 : p10) : (fp.y < 0.50 ? p01: p11);\n"
"\n"
"   // OUTPUT\n"
"   return float4(p10, 1);\n"
"}\n"
},
