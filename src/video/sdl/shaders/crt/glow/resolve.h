{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 VARprev;\n"
"COMPAT_VARYING     vec2 VARtex;\n"
"COMPAT_VARYING     vec2 VARtex_coord;\n"
"struct prev {\n"
"    vec2 _video_size;\n"
"    vec2 VARtexture_size;\n"
"float _placeholder29;\n"
"    vec2 VARtex_coord;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size1;\n"
"    vec2 VARtexture_size1;\n"
"};\n"
"struct VertexData {\n"
"    vec2 VARtex;\n"
"    vec2 VARprev;\n"
"};\n"
"vec4 _oPosition1;\n"
"VertexData _vert1;\n"
"prev _PASSPREV41;\n"
"vec4 _r0006;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"COMPAT_ATTRIBUTE vec2 PassPrev4TexCoord;\n"
"void main()\n"
"{\n"
"    _r0006 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0006;\n"
"    VARtex = TexCoord.xy;\n"
"    VARprev = PassPrev4TexCoord;\n"
"    gl_Position = _r0006;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 VARprev;\n"
"COMPAT_VARYING     vec2 VARtex;\n"
"COMPAT_VARYING     vec2 VARtex_coord;\n"
"struct prev {\n"
"    vec2 _video_size1;\n"
"    vec2 VARtexture_size1;\n"
"float _placeholder28;\n"
"    vec2 VARtex_coord;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 VARtexture_size;\n"
"};\n"
"struct VertexData {\n"
"    vec2 VARtex;\n"
"    vec2 VARprev;\n"
"};\n"
"vec4 _ret_0;\n"
"vec3 _TMP3;\n"
"float _TMP6;\n"
"float _TMP5;\n"
"float _TMP4;\n"
"vec3 _TMP7;\n"
"vec4 _TMP1;\n"
"vec4 _TMP0;\n"
"VertexData _vert1;\n"
"uniform sampler2D Texture;\n"
"prev _PASSPREV41;\n"
"vec3 _TMP19;\n"
" \n"
"uniform sampler2D PassPrev4Texture;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec3 _source;\n"
"    _TMP0 = COMPAT_TEXTURE(PassPrev4Texture, VARprev);\n"
"    _source = 1.14999998E+00*_TMP0.xyz;\n"
"    _TMP1 = COMPAT_TEXTURE(Texture, VARtex);\n"
"    _source = _source + 4.49999988E-01*_TMP1.xyz;\n"
"    _TMP7 = min(vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _source);\n"
"    _TMP19 = max(vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP7);\n"
"    _TMP4 = pow(_TMP19.x, 4.54545438E-01);\n"
"    _TMP5 = pow(_TMP19.y, 4.54545438E-01);\n"
"    _TMP6 = pow(_TMP19.z, 4.54545438E-01);\n"
"    _TMP3 = vec3(_TMP4, _TMP5, _TMP6);\n"
"    _ret_0 = vec4(_TMP3.x, _TMP3.y, _TMP3.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
