{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord1;\n"
"COMPAT_VARYING     vec4 _position1;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _position1;\n"
"    vec2 _texCoord1;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"out_vertex _ret_0;\n"
"input_dummy _IN1;\n"
"vec4 _r0008;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    out_vertex _OUT;\n"
"    vec2 _ps;\n"
"    _r0008 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0008 = _r0008 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0008 = _r0008 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0008 = _r0008 + VertexCoord.w*MVPMatrix[3];\n"
"    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);\n"
"    _OUT._t1.xy = TexCoord.xy + vec2(-_ps.x, -_ps.y);\n"
"    _OUT._t1.zw = TexCoord.xy + vec2(-_ps.x, 0.00000000E+00);\n"
"    _OUT._t2.xy = TexCoord.xy + vec2(+_ps.x, -_ps.y);\n"
"    _OUT._t2.zw = TexCoord.xy + vec2(+_ps.x + _ps.x, -_ps.y);\n"
"    _OUT._t3.xy = TexCoord.xy + vec2(-_ps.x, 0.00000000E+00);\n"
"    _OUT._t3.zw = TexCoord.xy + vec2(+_ps.x, 0.00000000E+00);\n"
"    _OUT._t4.xy = TexCoord.xy + vec2(+_ps.x + _ps.x, 0.00000000E+00);\n"
"    _OUT._t4.zw = TexCoord.xy + vec2(-_ps.x, +_ps.y);\n"
"    _OUT._t5.xy = TexCoord.xy + vec2(0.00000000E+00, +_ps.y);\n"
"    _OUT._t5.zw = TexCoord.xy + vec2(+_ps.x, +_ps.y);\n"
"    _OUT._t6.xy = TexCoord.xy + vec2(+_ps.x + _ps.x, +_ps.y);\n"
"    _OUT._t6.zw = TexCoord.xy + vec2(-_ps.x, +_ps.y + _ps.y);\n"
"    _OUT._t7.xy = TexCoord.xy + vec2(0.00000000E+00, +_ps.y + _ps.y);\n"
"    _OUT._t7.zw = TexCoord.xy + vec2(+_ps.x, +_ps.y + _ps.y);\n"
"    _ret_0._position1 = _r0008;\n"
"    _ret_0._texCoord1 = TexCoord.xy;\n"
"    _ret_0._t1 = _OUT._t1;\n"
"    _ret_0._t2 = _OUT._t2;\n"
"    _ret_0._t3 = _OUT._t3;\n"
"    _ret_0._t4 = _OUT._t4;\n"
"    _ret_0._t5 = _OUT._t5;\n"
"    _ret_0._t6 = _OUT._t6;\n"
"    _ret_0._t7 = _OUT._t7;\n"
"    gl_Position = _r0008;\n"
"    TEX0.xy = TexCoord.xy;\n"
"    TEX1 = _OUT._t1;\n"
"    TEX2 = _OUT._t2;\n"
"    TEX3 = _OUT._t3;\n"
"    TEX4 = _OUT._t4;\n"
"    TEX5 = _OUT._t5;\n"
"    TEX6 = _OUT._t6;\n"
"    TEX7 = _OUT._t7;\n"
"    return;\n"
"    TEX0.xy = _ret_0._texCoord1;\n"
"    TEX1 = _ret_0._t1;\n"
"    TEX2 = _ret_0._t2;\n"
"    TEX3 = _ret_0._t3;\n"
"    TEX4 = _ret_0._t4;\n"
"    TEX5 = _ret_0._t5;\n"
"    TEX6 = _ret_0._t6;\n"
"    TEX7 = _ret_0._t7;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct out_vertex {\n"
"    vec2 _texCoord;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"vec4 _ret_0;\n"
"vec3 _TMP28;\n"
"vec3 _TMP30;\n"
"vec3 _TMP29;\n"
"vec4 _TMP14;\n"
"vec4 _TMP13;\n"
"vec4 _TMP11;\n"
"vec4 _TMP10;\n"
"vec4 _TMP9;\n"
"vec4 _TMP8;\n"
"vec4 _TMP7;\n"
"vec4 _TMP6;\n"
"vec4 _TMP5;\n"
"vec4 _TMP4;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"uniform sampler2D Texture;\n"
"input_dummy _IN1;\n"
"vec2 _x0037;\n"
"float _TMP74;\n"
"float _TMP78;\n"
"float _TMP82;\n"
"float _TMP86;\n"
"float _TMP90;\n"
"float _TMP94;\n"
"float _TMP98;\n"
"float _TMP102;\n"
"float _TMP110;\n"
"float _TMP114;\n"
"float _TMP122;\n"
"float _TMP126;\n"
"int _x0135;\n"
"int _y0135;\n"
"int _r0135;\n"
"int _x0137;\n"
"int _y0137;\n"
"int _r0137;\n"
"int _x0139;\n"
"int _y0139;\n"
"int _r0139;\n"
"int _x0141;\n"
"int _y0141;\n"
"int _r0141;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _fp;\n"
"    vec3 _p00;\n"
"    vec3 _p10;\n"
"    vec3 _p01;\n"
"    vec3 _p11;\n"
"    int _r1;\n"
"    _x0037 = TEX0.xy*TextureSize;\n"
"    _fp = fract(_x0037);\n"
"    _TMP1 = COMPAT_TEXTURE(Texture, TEX1.zw);\n"
"    _TMP2 = COMPAT_TEXTURE(Texture, TEX2.xy);\n"
"    _TMP4 = COMPAT_TEXTURE(Texture, TEX3.xy);\n"
"    _TMP5 = COMPAT_TEXTURE(Texture, TEX0.xy);\n"
"    _TMP6 = COMPAT_TEXTURE(Texture, TEX3.zw);\n"
"    _TMP7 = COMPAT_TEXTURE(Texture, TEX4.xy);\n"
"    _TMP8 = COMPAT_TEXTURE(Texture, TEX4.zw);\n"
"    _TMP9 = COMPAT_TEXTURE(Texture, TEX5.xy);\n"
"    _TMP10 = COMPAT_TEXTURE(Texture, TEX5.zw);\n"
"    _TMP11 = COMPAT_TEXTURE(Texture, TEX6.xy);\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, TEX7.xy);\n"
"    _TMP14 = COMPAT_TEXTURE(Texture, TEX7.zw);\n"
"    _TMP74 = dot(_TMP1.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP78 = dot(_TMP2.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP82 = dot(_TMP4.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP86 = dot(_TMP5.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP90 = dot(_TMP6.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP94 = dot(_TMP8.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP98 = dot(_TMP9.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP102 = dot(_TMP10.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP110 = dot(_TMP13.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP114 = dot(_TMP14.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP122 = dot(_TMP7.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    _TMP126 = dot(_TMP11.xyz, vec3( 6.55360000E+04, 2.55000000E+02, 1.00000000E+00));\n"
"    if (_TMP86 != _TMP102) { \n"
"        if (_TMP98 == _TMP90) { \n"
"            _p10 = _TMP9.xyz;\n"
"            _p01 = _TMP9.xyz;\n"
"            if (_TMP94 == _TMP98 || _TMP90 == _TMP78) { \n"
"                _p00 = 2.50000000E-01*(3.00000000E+00*_TMP9.xyz + _TMP5.xyz);\n"
"            } else {\n"
"                _p00 = 5.00000000E-01*(_TMP5.xyz + _TMP6.xyz);\n"
"            } \n"
"            if (_TMP90 == _TMP122 || _TMP98 == _TMP110) { \n"
"                _p11 = 2.50000000E-01*(3.00000000E+00*_TMP9.xyz + _TMP10.xyz);\n"
"            } else {\n"
"                _p11 = 5.00000000E-01*(_TMP9.xyz + _TMP10.xyz);\n"
"            } \n"
"        } else {\n"
"            _p11 = 1.25000000E-01*(6.00000000E+00*_TMP10.xyz + _TMP9.xyz + _TMP6.xyz);\n"
"            _p00 = 1.25000000E-01*(6.00000000E+00*_TMP5.xyz + _TMP9.xyz + _TMP6.xyz);\n"
"            _p10 = 1.25000000E-01*(6.00000000E+00*_TMP9.xyz + _TMP5.xyz + _TMP10.xyz);\n"
"            _p01 = 1.25000000E-01*(6.00000000E+00*_TMP6.xyz + _TMP5.xyz + _TMP10.xyz);\n"
"        } \n"
"    } else {\n"
"        if (_TMP98 != _TMP90) { \n"
"            _p00 = _TMP5.xyz;\n"
"            _p11 = _TMP5.xyz;\n"
"            if (_TMP74 == _TMP86 || _TMP102 == _TMP126) { \n"
"                _p01 = 2.50000000E-01*(3.00000000E+00*_TMP5.xyz + _TMP6.xyz);\n"
"            } else {\n"
"                _p01 = 5.00000000E-01*(_TMP5.xyz + _TMP6.xyz);\n"
"            } \n"
"            if (_TMP102 == _TMP114 || _TMP82 == _TMP86) { \n"
"                _p10 = 2.50000000E-01*(3.00000000E+00*_TMP5.xyz + _TMP9.xyz);\n"
"            } else {\n"
"                _p10 = 5.00000000E-01*(_TMP9.xyz + _TMP10.xyz);\n"
"            } \n"
"        } else {\n"
"            _x0135 = 0;\n"
"            _y0135 = 0;\n"
"            _r0135 = 0;\n"
"            if (_TMP90 == _TMP94) { \n"
"                _x0135 = 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP94) { \n"
"                    _y0135 = 1;\n"
"                } \n"
"            } \n"
"            if (_TMP90 == _TMP110) { \n"
"                _x0135 = _x0135 + 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP110) { \n"
"                    _y0135 = _y0135 + 1;\n"
"                } \n"
"            } \n"
"            if (_x0135 <= 1) { \n"
"                _r0135 = 1;\n"
"            } \n"
"            if (_y0135 <= 1) { \n"
"                _r0135 = _r0135 - 1;\n"
"            } \n"
"            _x0137 = 0;\n"
"            _y0137 = 0;\n"
"            _r0137 = 0;\n"
"            if (_TMP90 == _TMP82) { \n"
"                _x0137 = 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP82) { \n"
"                    _y0137 = 1;\n"
"                } \n"
"            } \n"
"            if (_TMP90 == _TMP74) { \n"
"                _x0137 = _x0137 + 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP74) { \n"
"                    _y0137 = _y0137 + 1;\n"
"                } \n"
"            } \n"
"            if (_x0137 <= 1) { \n"
"                _r0137 = 1;\n"
"            } \n"
"            if (_y0137 <= 1) { \n"
"                _r0137 = _r0137 - 1;\n"
"            } \n"
"            _r1 = _r0135 + _r0137;\n"
"            _x0139 = 0;\n"
"            _y0139 = 0;\n"
"            _r0139 = 0;\n"
"            if (_TMP90 == _TMP114) { \n"
"                _x0139 = 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP114) { \n"
"                    _y0139 = 1;\n"
"                } \n"
"            } \n"
"            if (_TMP90 == _TMP126) { \n"
"                _x0139 = _x0139 + 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP126) { \n"
"                    _y0139 = _y0139 + 1;\n"
"                } \n"
"            } \n"
"            if (_x0139 <= 1) { \n"
"                _r0139 = 1;\n"
"            } \n"
"            if (_y0139 <= 1) { \n"
"                _r0139 = _r0139 - 1;\n"
"            } \n"
"            _r1 = _r1 + _r0139;\n"
"            _x0141 = 0;\n"
"            _y0141 = 0;\n"
"            _r0141 = 0;\n"
"            if (_TMP90 == _TMP78) { \n"
"                _x0141 = 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP78) { \n"
"                    _y0141 = 1;\n"
"                } \n"
"            } \n"
"            if (_TMP90 == _TMP122) { \n"
"                _x0141 = _x0141 + 1;\n"
"            } else {\n"
"                if (_TMP86 == _TMP122) { \n"
"                    _y0141 = _y0141 + 1;\n"
"                } \n"
"            } \n"
"            if (_x0141 <= 1) { \n"
"                _r0141 = 1;\n"
"            } \n"
"            if (_y0141 <= 1) { \n"
"                _r0141 = _r0141 - 1;\n"
"            } \n"
"            _r1 = _r1 + _r0141;\n"
"            if (_r1 > 0) { \n"
"                _p10 = _TMP9.xyz;\n"
"                _p01 = _TMP9.xyz;\n"
"                _p11 = 5.00000000E-01*(_TMP5.xyz + _TMP6.xyz);\n"
"                _p00 = _p11;\n"
"            } else {\n"
"                if (_r1 < 0) { \n"
"                    _p00 = _TMP5.xyz;\n"
"                    _p11 = _TMP5.xyz;\n"
"                    _p10 = 5.00000000E-01*(_TMP5.xyz + _TMP6.xyz);\n"
"                    _p01 = _p10;\n"
"                } else {\n"
"                    _p00 = _TMP5.xyz;\n"
"                    _p11 = _TMP5.xyz;\n"
"                    _p10 = _TMP9.xyz;\n"
"                    _p01 = _TMP9.xyz;\n"
"                } \n"
"            } \n"
"        } \n"
"    } \n"
"    if (_fp.x < 5.00000000E-01) { \n"
"        if (_fp.y < 5.00000000E-01) { \n"
"            _TMP29 = _p00;\n"
"        } else {\n"
"            _TMP29 = _p10;\n"
"        } \n"
"        _TMP28 = _TMP29;\n"
"    } else {\n"
"        if (_fp.y < 5.00000000E-01) { \n"
"            _TMP30 = _p01;\n"
"        } else {\n"
"            _TMP30 = _p11;\n"
"        } \n"
"        _TMP28 = _TMP30;\n"
"    } \n"
"    _ret_0 = vec4(_TMP28.x, _TMP28.y, _TMP28.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
