{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying \n"
"#define COMPAT_ATTRIBUTE attribute \n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 _texCoord1;\n"
"COMPAT_VARYING     vec4 _color1;\n"
"COMPAT_VARYING     vec4 _position1;\n"
"COMPAT_VARYING     vec2 _tex_coord;\n"
"struct orig {\n"
"    vec2 _tex_coord;\n"
"    vec2 _texture_size1;\n"
"float _placeholder22;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _position1;\n"
"    vec4 _color1;\n"
"    vec2 _texCoord1;\n"
"};\n"
"out_vertex _ret_0;\n"
"vec4 _r0009;\n"
"vec4 _v0009;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    out_vertex _OUT;\n"
"    _v0009 = vec4(float(VertexCoord.x), float(VertexCoord.y), float(VertexCoord.z), float(VertexCoord.w));\n"
"    _r0009 = _v0009.x*MVPMatrix[0];\n"
"    _r0009 = _r0009 + _v0009.y*MVPMatrix[1];\n"
"    _r0009 = _r0009 + _v0009.z*MVPMatrix[2];\n"
"    _r0009 = _r0009 + _v0009.w*MVPMatrix[3];\n"
"    _OUT._position1 = vec4(float(_r0009.x), float(_r0009.y), float(_r0009.z), float(_r0009.w));\n"
"    _ret_0._position1 = _OUT._position1;\n"
"    _ret_0._color1 = COLOR;\n"
"    _ret_0._texCoord1 = TexCoord.xy;\n"
"    gl_Position = _OUT._position1;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = TexCoord.xy;\n"
"    return;\n"
"    COL0 = _ret_0._color1;\n"
"    TEX0.xy = _ret_0._texCoord1;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"COMPAT_VARYING     vec4 _color;\n"
"COMPAT_VARYING     vec2 _tex_coord;\n"
"struct orig {\n"
"    vec2 _tex_coord;\n"
"    vec2 _texture_size;\n"
"float _placeholder31;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size1;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _color;\n"
"    vec2 _texCoord;\n"
"};\n"
"vec4 _ret_0;\n"
"float _TMP10;\n"
"vec4 _TMP8;\n"
"float _TMP7;\n"
"vec2 _TMP6;\n"
"vec4 _TMP5;\n"
"vec4 _TMP4;\n"
"vec4 _TMP3;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"vec2 _TMP0;\n"
"uniform sampler2D Texture;\n"
"orig _ORIG1;\n"
"input_dummy _IN1;\n"
"uniform sampler2D LUT;\n"
"vec2 _x0019;\n"
"vec2 _val0021;\n"
"vec2 _a0021;\n"
"vec2 _c0025;\n"
"vec2 _c0027;\n"
"vec2 _c0029;\n"
"vec2 _x0033;\n"
"vec2 _c0037;\n"
"vec3 _r0043;\n"
"vec4 _v0043;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform COMPAT_PRECISION vec2 OrigTextureSize;\n"
"uniform sampler2D OrigTexture;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _fp;\n"
"    vec2 _quad;\n"
"    vec2 _ps;\n"
"    vec3 _pixels[4];\n"
"    vec2 _index;\n"
"    vec4 _weights;\n"
"    float _sum;\n"
"    vec3 _TMP17[4];\n"
"    _x0019 = TEX0.xy*TextureSize;\n"
"    _fp = fract(_x0019);\n"
"    _a0021 = -5.00000000E-01 + _fp;\n"
"    _val0021 = vec2(float((_a0021.x > 0.00000000E+00)), float((_a0021.y > 0.00000000E+00)));\n"
"    _TMP0 = _val0021 - vec2(float((_a0021.x < 0.00000000E+00)), float((_a0021.y < 0.00000000E+00)));\n"
"    _quad = vec2(float(_TMP0.x), float(_TMP0.y));\n"
"    _ps = 1.00000000E+00/OrigTextureSize;\n"
"    _TMP1 = COMPAT_TEXTURE(OrigTexture, TEX0.xy);\n"
"    _c0025 = TEX0.xy + vec2(_ps.x, _ps.y)*vec2(float(_quad.x), float(_quad.y));\n"
"    _TMP2 = COMPAT_TEXTURE(OrigTexture, _c0025);\n"
"    _c0027 = TEX0.xy + vec2(_ps.x, 0.00000000E+00)*vec2(float(_quad.x), float(_quad.y));\n"
"    _TMP3 = COMPAT_TEXTURE(OrigTexture, _c0027);\n"
"    _c0029 = TEX0.xy + vec2(0.00000000E+00, _ps.y)*vec2(float(_quad.x), float(_quad.y));\n"
"    _TMP4 = COMPAT_TEXTURE(OrigTexture, _c0029);\n"
"    _TMP17[0] = vec3(float(_TMP1.x), float(_TMP1.y), float(_TMP1.z));\n"
"    _TMP17[1] = vec3(float(_TMP2.x), float(_TMP2.y), float(_TMP2.z));\n"
"    _TMP17[2] = vec3(float(_TMP3.x), float(_TMP3.y), float(_TMP3.z));\n"
"    _TMP17[3] = vec3(float(_TMP4.x), float(_TMP4.y), float(_TMP4.z));\n"
"    _pixels[0] = vec3(float(_TMP17[0].x), float(_TMP17[0].y), float(_TMP17[0].z));\n"
"    _pixels[1] = vec3(float(_TMP17[1].x), float(_TMP17[1].y), float(_TMP17[1].z));\n"
"    _pixels[2] = vec3(float(_TMP17[2].x), float(_TMP17[2].y), float(_TMP17[2].z));\n"
"    _pixels[3] = vec3(float(_TMP17[3].x), float(_TMP17[3].y), float(_TMP17[3].z));\n"
"    _TMP5 = COMPAT_TEXTURE(Texture, TEX0.xy);\n"
"    _index = vec2(float((_TMP5.xy*vec2( 2.55000000E+02, 1.35000000E+02)).x), float((_TMP5.xy*vec2( 2.55000000E+02, 1.35000000E+02)).y));\n"
"    _x0033 = _fp*3.00000000E+00;\n"
"    _TMP6 = floor(_x0033);\n"
"    _TMP7 = dot(_TMP6, vec2( 1.00000000E+00, 3.00000000E+00));\n"
"    _index.y = float((float(_index.y) + _TMP7));\n"
"    _c0037 = vec2(float((_index*vec2( 3.90625000E-03, 6.94274902E-03) + vec2( 1.95312500E-03, 3.47137451E-03)).x), float((_index*vec2( 3.90625000E-03, 6.94274902E-03) + vec2( 1.95312500E-03, 3.47137451E-03)).y));\n"
"    _TMP8 = COMPAT_TEXTURE(LUT, _c0037);\n"
"    _weights = vec4(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z), float(_TMP8.w));\n"
"    _TMP10 = dot(vec4(float(_weights.x), float(_weights.y), float(_weights.z), float(_weights.w)), vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00));\n"
"    _sum = float(_TMP10);\n"
"    _v0043 = vec4(float((_weights/_sum).x), float((_weights/_sum).y), float((_weights/_sum).z), float((_weights/_sum).w));\n"
"    _r0043 = _v0043.x*_pixels[0];\n"
"    _r0043 = _r0043 + _v0043.y*_pixels[1];\n"
"    _r0043 = _r0043 + _v0043.z*_pixels[2];\n"
"    _r0043 = _r0043 + _v0043.w*_pixels[3];\n"
"    _ret_0 = vec4(_r0043.x, _r0043.y, _r0043.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
