{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying \n"
"#define COMPAT_ATTRIBUTE attribute \n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _col;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"COMPAT_VARYING     vec2 _tex_coord;\n"
"struct previous {\n"
"float _placeholder20;\n"
"    vec2 _tex_coord;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct output_dummy {\n"
"    vec4 _col;\n"
"};\n"
"vec4 _oPosition1;\n"
"vec4 _r0006;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec4 _oColor;\n"
"    vec2 _oTexCoord;\n"
"    _r0006 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0006;\n"
"    _oColor = COLOR;\n"
"    _oTexCoord = TexCoord.xy;\n"
"    gl_Position = _r0006;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = TexCoord.xy;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _col;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"COMPAT_VARYING     vec2 _tex_coord;\n"
"struct previous {\n"
"float _placeholder57;\n"
"    vec2 _tex_coord;\n"
"};\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct output_dummy {\n"
"    vec4 _col;\n"
"};\n"
"vec4 _TMP5;\n"
"vec4 _TMP4;\n"
"vec4 _TMP3;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"vec4 _TMP0;\n"
"uniform sampler2D Texture;\n"
"input_dummy _IN1;\n"
"previous _PREV7;\n"
"previous _PREV11;\n"
"previous _PREV21;\n"
"previous _PREV31;\n"
"previous _PREV41;\n"
"previous _PREV51;\n"
"previous _PREV61;\n"
"COMPAT_VARYING vec4 TEX0;\n"
" \n"
"uniform sampler2D Prev6Texture;\n"
"uniform sampler2D Prev5Texture;\n"
"uniform sampler2D Prev4Texture;\n"
"uniform sampler2D Prev3Texture;\n"
"uniform sampler2D Prev2Texture;\n"
"uniform sampler2D Prev1Texture;\n"
"uniform sampler2D PrevTexture;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec4 _current;\n"
"    vec4 _color;\n"
"    _current = COMPAT_TEXTURE(Texture, TEX0.xy);\n"
"    _color = COMPAT_TEXTURE(Prev6Texture, TEX0.xy);\n"
"    _TMP0 = COMPAT_TEXTURE(Prev5Texture, TEX0.xy);\n"
"    _color = _color + _TMP0;\n"
"    _TMP1 = COMPAT_TEXTURE(Prev4Texture, TEX0.xy);\n"
"    _color = _color + _TMP1;\n"
"    _TMP2 = COMPAT_TEXTURE(Prev3Texture, TEX0.xy);\n"
"    _color = _color + _TMP2;\n"
"    _TMP3 = COMPAT_TEXTURE(Prev2Texture, TEX0.xy);\n"
"    _color = _color + _TMP3;\n"
"    _TMP4 = COMPAT_TEXTURE(Prev1Texture, TEX0.xy);\n"
"    _color = _color + _TMP4;\n"
"    _TMP5 = COMPAT_TEXTURE(PrevTexture, TEX0.xy);\n"
"    _color = _color + _TMP5;\n"
"    _color = _color + _current;\n"
//"    if (float(FrameDirection) < 0.00000000E+00) { \n"
"        _current = ((_current + _color/7.00000000E+00)/2.00000000E+00)*vec4( 1.00000000E+00, 8.00000012E-01, 6.00000024E-01, 1.00000000E+00);\n"
//"    } \n"
"    FragColor = _current;\n"
"    return;\n"
"} \n"
"#endif\n"
},
