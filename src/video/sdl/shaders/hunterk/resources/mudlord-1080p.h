{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying \n"
"#define COMPAT_ATTRIBUTE attribute \n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _oPosition1;\n"
"input_dummy _IN1;\n"
"vec4 _r0006;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_ATTRIBUTE vec4 LUTTexCoord;\n"
"COMPAT_VARYING vec4 TEX1;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec4 _oColor;\n"
"    vec2 _oTex;\n"
"    vec2 _otex_border;\n"
"    vec2 _scale;\n"
"    vec2 _middle;\n"
"    vec2 _diff;\n"
"    vec2 _dist;\n"
"    _r0006 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0006 = _r0006 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0006 = _r0006 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0006 = _r0006 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0006;\n"
"    _oColor = COLOR;\n"
"    _scale = (OutputSize/vec2( 3.20000000E+02, 2.40000000E+02))/4.00000000E+00;\n"
"    _middle = (5.00000000E-01*InputSize)/TextureSize;\n"
"    _diff = TexCoord.xy - _middle;\n"
"    _oTex = _middle + _diff*_scale;\n"
"    _dist = LUTTexCoord.xy - vec2( 4.99989986E-01, 4.99989986E-01);\n"
"    _otex_border = vec2( 4.99989986E-01, 4.99989986E-01) + (_dist*OutputSize)/vec2( 1.92000000E+03, 1.08000000E+03);\n"
"    gl_Position = _r0006;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = _oTex;\n"
"    TEX1.xy = _otex_border;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count1;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"vec4 _ret_0;\n"
"vec4 _TMP8;\n"
"float _TMP7;\n"
"float _TMP9;\n"
"float _TMP6;\n"
"float _TMP5;\n"
"float _TMP4;\n"
"float _TMP3;\n"
"float _TMP2;\n"
"float _TMP1;\n"
"float _TMP0;\n"
"uniform sampler2D Texture;\n"
"uniform sampler2D bg;\n"
"input_dummy _IN1;\n"
"float _a0016;\n"
"float _a0018;\n"
"float _a0020;\n"
"float _a0022;\n"
"float _a0024;\n"
"float _a0026;\n"
"vec2 _a0028;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec2 _sp;\n"
"    vec2 _p;\n"
"    vec2 _i;\n"
"    float _c;\n"
"    float _t;\n"
"    vec4 _mudscape;\n"
"    vec4 _frame;\n"
"    vec4 _background;\n"
"    vec3 _TMP14;\n"
"    _sp = TEX0.xy*(TextureSize.xy/InputSize.xy);\n"
"    _p = _sp*1.00000000E+01 - vec2( 1.00000000E+01, 1.00000000E+01);\n"
"    _t = 9.99999940E-02*float(FrameCount)*-2.00000000E+00;\n"
"    _a0016 = _t - _p.x;\n"
"    _TMP0 = cos(_a0016);\n"
"    _a0018 = _t + _p.y;\n"
"    _TMP1 = sin(_a0018);\n"
"    _a0020 = _t - _p.y;\n"
"    _TMP2 = sin(_a0020);\n"
"    _a0022 = _t + _p.x;\n"
"    _TMP3 = cos(_a0022);\n"
"    _i = _p + vec2(_TMP0 + _TMP1, _TMP2 + _TMP3);\n"
"    _a0024 = _i.x + _t;\n"
"    _TMP4 = sin(_a0024);\n"
"    _a0026 = _i.y + _t;\n"
"    _TMP5 = cos(_a0026);\n"
"    _a0028 = vec2(_p.x/(_TMP4/1.00000001E-01), _p.y/(_TMP5/1.00000001E-01));\n"
"    _TMP6 = length(_a0028);\n"
"    _c = 1.00000000E+00 + 1.20000005E+00/_TMP6;\n"
"    _TMP9 = inversesqrt(_c);\n"
"    _TMP7 = 1.00000000E+00/_TMP9;\n"
"    _c = 2.00000000E+00 - _TMP7;\n"
"    _TMP14 = vec3(_c*_c*_c*_c, _c*_c*_c*_c, _c*_c*_c*_c);\n"
"    _mudscape = vec4(_TMP14.x, _TMP14.y, _TMP14.z, 9.99900000E+03) + vec4( 0.00000000E+00, 3.00000012E-01, 5.00000000E-01, 1.00000000E+00);\n"
"    _frame = COMPAT_TEXTURE(Texture, TEX0.xy);\n"
"    _TMP8 = COMPAT_TEXTURE(bg, TEX1.xy);\n"
"    _background = vec4(_TMP8.x, _TMP8.y, _TMP8.z, _TMP8.w);\n"
"    _ret_0 = _frame + _background.w*(_mudscape - _frame);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
