{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 VARfeedbacktex;\n"
"COMPAT_VARYING     vec2 VARtex;\n"
"COMPAT_VARYING     vec2 VARtex_coord;\n"
"struct input_dummy {\n"
"    vec2 VARtex_coord;\n"
"    vec4 _vertex_coord;\n"
"    vec4 _mvp_matrix[4];\n"
"float _placeholder35;\n"
"};\n"
"struct vertex_data {\n"
"    vec2 VARtex;\n"
"    vec2 VARfeedbacktex;\n"
"};\n"
"vec4 _oPosition1;\n"
"vertex_data _vert1;\n"
"input_dummy _IN1;\n"
"input_dummy _FEEDBACK1;\n"
"vec4 _r0007;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"COMPAT_ATTRIBUTE vec2 FeedbackTexCoord;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec2 TexCoord;\n"
"void main()\n"
"{\n"
"    _r0007 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0007 = _r0007 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0007 = _r0007 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0007 = _r0007 + VertexCoord.w*MVPMatrix[3];\n"
"    _oPosition1 = _r0007;\n"
"    VARtex = TexCoord;\n"
"    VARfeedbacktex = FeedbackTexCoord;\n"
"    gl_Position = _r0007;\n"
"}\n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec2 VARfeedbacktex;\n"
"COMPAT_VARYING     vec2 VARtex;\n"
"COMPAT_VARYING     vec2 VARtex_coord;\n"
"struct input_dummy {\n"
"    vec2 VARtex_coord;\n"
"    vec4 _vertex_coord;\n"
"    vec4 _mvp_matrix[4];\n"
"float _placeholder35;\n"
"};\n"
"struct vertex_data {\n"
"    vec2 VARtex;\n"
"    vec2 VARfeedbacktex;\n"
"};\n"
"vec4 _ret_0;\n"
"float _TMP5;\n"
"float _TMP4;\n"
"float _TMP3;\n"
"float _TMP2;\n"
"vec4 _TMP1;\n"
"vec4 _TMP0;\n"
"vertex_data _vert1;\n"
"input_dummy _IN1;\n"
"input_dummy _FEEDBACK1;\n"
" \n"
"uniform sampler2D Texture;\n"
"uniform sampler2D FeedbackTexture;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    vec4 _current;\n"
"    vec4 _fdback;\n"
"    vec4 _mixed;\n"
"    _TMP0 = COMPAT_TEXTURE(Texture, VARtex);\n"
"    _TMP2 = pow(_TMP0.x, 2.20000005E+00);\n"
"    _TMP3 = pow(_TMP0.y, 2.20000005E+00);\n"
"    _TMP4 = pow(_TMP0.z, 2.20000005E+00);\n"
"    _TMP5 = pow(_TMP0.w, 2.20000005E+00);\n"
"    _current = vec4(_TMP2, _TMP3, _TMP4, _TMP5);\n"
"    _TMP1 = COMPAT_TEXTURE(FeedbackTexture, VARfeedbacktex);\n"
"    _TMP2 = pow(_TMP1.x, 2.20000005E+00);\n"
"    _TMP3 = pow(_TMP1.y, 2.20000005E+00);\n"
"    _TMP4 = pow(_TMP1.z, 2.20000005E+00);\n"
"    _TMP5 = pow(_TMP1.w, 2.20000005E+00);\n"
"    _fdback = vec4(_TMP2, _TMP3, _TMP4, _TMP5);\n"
"    _mixed = 2.50000000E-01*_current + 7.50000000E-01*_fdback;\n"
"    _TMP2 = pow(_mixed.x, 4.54545438E-01);\n"
"    _TMP3 = pow(_mixed.y, 4.54545438E-01);\n"
"    _TMP4 = pow(_mixed.z, 4.54545438E-01);\n"
"    _TMP5 = pow(_mixed.w, 4.54545438E-01);\n"
"    _ret_0 = vec4(_TMP2, _TMP3, _TMP4, _TMP5);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"},
