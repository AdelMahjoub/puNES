{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord2;\n"
"COMPAT_VARYING     vec4 _color1;\n"
"COMPAT_VARYING     vec4 _position1;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _position1;\n"
"    vec4 _color1;\n"
"    vec2 _texCoord2;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"out_vertex _ret_0;\n"
"input_dummy _IN1;\n"
"vec4 _r0008;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    out_vertex _OUT;\n"
"    vec2 _ps;\n"
"    vec2 _texCoord;\n"
"    _r0008 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0008 = _r0008 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0008 = _r0008 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0008 = _r0008 + VertexCoord.w*MVPMatrix[3];\n"
"    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);\n"
"    _texCoord = TexCoord.xy + vec2( 1.00000001E-07, 1.00000001E-07);\n"
"    _OUT._t1 = _texCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -2.00000000E+00*_ps.y);\n"
"    _OUT._t2 = _texCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -_ps.y);\n"
"    _OUT._t3 = _texCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 0.00000000E+00);\n"
"    _OUT._t4 = _texCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, _ps.y);\n"
"    _OUT._t5 = _texCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 2.00000000E+00*_ps.y);\n"
"    _OUT._t6 = _texCoord.xyyy + vec4(-2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);\n"
"    _OUT._t7 = _texCoord.xyyy + vec4(2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);\n"
"    _ret_0._position1 = _r0008;\n"
"    _ret_0._color1 = COLOR;\n"
"    _ret_0._texCoord2 = _texCoord;\n"
"    _ret_0._t1 = _OUT._t1;\n"
"    _ret_0._t2 = _OUT._t2;\n"
"    _ret_0._t3 = _OUT._t3;\n"
"    _ret_0._t4 = _OUT._t4;\n"
"    _ret_0._t5 = _OUT._t5;\n"
"    _ret_0._t6 = _OUT._t6;\n"
"    _ret_0._t7 = _OUT._t7;\n"
"    gl_Position = _r0008;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = _texCoord;\n"
"    TEX1 = _OUT._t1;\n"
"    TEX2 = _OUT._t2;\n"
"    TEX3 = _OUT._t3;\n"
"    TEX4 = _OUT._t4;\n"
"    TEX5 = _OUT._t5;\n"
"    TEX6 = _OUT._t6;\n"
"    TEX7 = _OUT._t7;\n"
"    return;\n"
"    COL0 = _ret_0._color1;\n"
"    TEX0.xy = _ret_0._texCoord2;\n"
"    TEX1 = _ret_0._t1;\n"
"    TEX2 = _ret_0._t2;\n"
"    TEX3 = _ret_0._t3;\n"
"    TEX4 = _ret_0._t4;\n"
"    TEX5 = _ret_0._t5;\n"
"    TEX6 = _ret_0._t6;\n"
"    TEX7 = _ret_0._t7;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"COMPAT_VARYING     vec4 _color;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _color;\n"
"    vec2 _texCoord;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"vec4 _ret_0;\n"
"vec3 _TMP48;\n"
"vec3 _TMP46;\n"
"vec3 _TMP44;\n"
"vec3 _TMP42;\n"
"vec3 _TMP47;\n"
"vec3 _TMP45;\n"
"vec3 _TMP43;\n"
"vec3 _TMP41;\n"
"vec4 _TMP40;\n"
"vec4 _TMP33;\n"
"vec4 _TMP32;\n"
"vec4 _TMP55;\n"
"bvec4 _TMP31;\n"
"bvec4 _TMP30;\n"
"bvec4 _TMP29;\n"
"bvec4 _TMP28;\n"
"bvec4 _TMP27;\n"
"bvec4 _TMP26;\n"
"bvec4 _TMP25;\n"
"bvec4 _TMP24;\n"
"bvec4 _TMP23;\n"
"bvec4 _TMP22;\n"
"bvec4 _TMP21;\n"
"vec4 _TMP20;\n"
"vec4 _TMP19;\n"
"vec4 _TMP18;\n"
"vec4 _TMP17;\n"
"vec4 _TMP16;\n"
"vec4 _TMP15;\n"
"vec4 _TMP14;\n"
"vec4 _TMP13;\n"
"vec4 _TMP12;\n"
"vec4 _TMP11;\n"
"vec4 _TMP10;\n"
"vec4 _TMP9;\n"
"vec4 _TMP8;\n"
"vec4 _TMP7;\n"
"vec4 _TMP6;\n"
"vec4 _TMP5;\n"
"vec4 _TMP4;\n"
"vec4 _TMP3;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"vec4 _TMP0;\n"
"uniform sampler2D Texture;\n"
"input_dummy _IN1;\n"
"vec2 _x0070;\n"
"vec4 _r0114;\n"
"vec4 _r0124;\n"
"vec4 _r0134;\n"
"vec4 _r0144;\n"
"vec4 _r0154;\n"
"vec4 _r0164;\n"
"vec4 _TMP175;\n"
"vec4 _a0178;\n"
"vec4 _TMP181;\n"
"vec4 _a0184;\n"
"vec4 _TMP187;\n"
"vec4 _a0190;\n"
"vec4 _TMP193;\n"
"vec4 _a0196;\n"
"vec4 _TMP199;\n"
"vec4 _a0202;\n"
"vec4 _TMP205;\n"
"vec4 _a0208;\n"
"vec4 _TMP211;\n"
"vec4 _a0214;\n"
"vec4 _TMP217;\n"
"vec4 _a0220;\n"
"vec4 _TMP223;\n"
"vec4 _a0226;\n"
"vec4 _TMP229;\n"
"vec4 _a0232;\n"
"vec4 _TMP235;\n"
"vec4 _a0238;\n"
"vec4 _x0240;\n"
"vec4 _TMP241;\n"
"vec4 _x0248;\n"
"vec4 _TMP249;\n"
"vec4 _x0256;\n"
"vec4 _TMP257;\n"
"vec4 _TMP265;\n"
"vec4 _a0268;\n"
"vec4 _TMP269;\n"
"vec4 _a0272;\n"
"vec4 _TMP273;\n"
"vec4 _a0276;\n"
"vec4 _TMP277;\n"
"vec4 _a0280;\n"
"vec4 _TMP281;\n"
"vec4 _a0284;\n"
"vec4 _TMP287;\n"
"vec4 _a0290;\n"
"vec4 _TMP291;\n"
"vec4 _a0294;\n"
"vec4 _TMP295;\n"
"vec4 _a0298;\n"
"vec4 _TMP299;\n"
"vec4 _a0302;\n"
"vec4 _TMP303;\n"
"vec4 _a0306;\n"
"vec4 _TMP307;\n"
"vec4 _a0310;\n"
"vec4 _TMP311;\n"
"vec4 _a0314;\n"
"vec4 _TMP315;\n"
"vec4 _a0318;\n"
"vec4 _TMP319;\n"
"vec4 _a0322;\n"
"vec4 _TMP323;\n"
"vec4 _a0326;\n"
"vec4 _TMP327;\n"
"vec4 _a0330;\n"
"float _t0336;\n"
"float _t0340;\n"
"float _t0344;\n"
"float _t0348;\n"
"vec4 _r0352;\n"
"vec4 _TMP361;\n"
"vec4 _a0364;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    bvec4 _edr;\n"
"    bvec4 _edr_left;\n"
"    bvec4 _edr_up;\n"
"    bvec4 _px;\n"
"    bvec4 _interp_restriction_lv1;\n"
"    bvec4 _interp_restriction_lv2_left;\n"
"    bvec4 _interp_restriction_lv2_up;\n"
"    vec4 _fx;\n"
"    vec4 _fx_left;\n"
"    vec4 _fx_up;\n"
"    vec2 _fp;\n"
"    vec4 _fx45;\n"
"    vec4 _fx30;\n"
"    vec4 _fx60;\n"
"    vec4 _maximo;\n"
"    vec3 _res;\n"
"    float _mx;\n"
"    _x0070 = TEX0.xy*TextureSize;\n"
"    _fp = fract(_x0070);\n"
"    _TMP0 = COMPAT_TEXTURE(Texture, TEX1.xw);\n"
"    _TMP1 = COMPAT_TEXTURE(Texture, TEX1.yw);\n"
"    _TMP2 = COMPAT_TEXTURE(Texture, TEX1.zw);\n"
"    _TMP3 = COMPAT_TEXTURE(Texture, TEX2.xw);\n"
"    _TMP4 = COMPAT_TEXTURE(Texture, TEX2.yw);\n"
"    _TMP5 = COMPAT_TEXTURE(Texture, TEX2.zw);\n"
"    _TMP6 = COMPAT_TEXTURE(Texture, TEX3.xw);\n"
"    _TMP7 = COMPAT_TEXTURE(Texture, TEX3.yw);\n"
"    _TMP8 = COMPAT_TEXTURE(Texture, TEX3.zw);\n"
"    _TMP9 = COMPAT_TEXTURE(Texture, TEX4.xw);\n"
"    _TMP10 = COMPAT_TEXTURE(Texture, TEX4.yw);\n"
"    _TMP11 = COMPAT_TEXTURE(Texture, TEX4.zw);\n"
"    _TMP12 = COMPAT_TEXTURE(Texture, TEX5.xw);\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, TEX5.yw);\n"
"    _TMP14 = COMPAT_TEXTURE(Texture, TEX5.zw);\n"
"    _TMP15 = COMPAT_TEXTURE(Texture, TEX6.xy);\n"
"    _TMP16 = COMPAT_TEXTURE(Texture, TEX6.xz);\n"
"    _TMP17 = COMPAT_TEXTURE(Texture, TEX6.xw);\n"
"    _TMP18 = COMPAT_TEXTURE(Texture, TEX7.xy);\n"
"    _TMP19 = COMPAT_TEXTURE(Texture, TEX7.xz);\n"
"    _TMP20 = COMPAT_TEXTURE(Texture, TEX7.xw);\n"
"    _r0114.x = dot(_TMP4.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0114.y = dot(_TMP6.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0114.z = dot(_TMP10.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0114.w = dot(_TMP8.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0124.x = dot(_TMP5.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0124.y = dot(_TMP3.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0124.z = dot(_TMP9.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0124.w = dot(_TMP11.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0134.x = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0134.y = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0134.z = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0134.w = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0144.x = dot(_TMP20.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0144.y = dot(_TMP2.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0144.z = dot(_TMP15.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0144.w = dot(_TMP12.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0154.x = dot(_TMP14.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0154.y = dot(_TMP18.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0154.z = dot(_TMP0.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0154.w = dot(_TMP17.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0164.x = dot(_TMP13.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0164.y = dot(_TMP19.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0164.z = dot(_TMP1.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0164.w = dot(_TMP16.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _fx = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 1.00000000E+00, 1.00000000E+00, -1.00000000E+00, -1.00000000E+00)*_fp.x;\n"
"    _fx_left = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 5.00000000E-01, 2.00000000E+00, -5.00000000E-01, -2.00000000E+00)*_fp.x;\n"
"    _fx_up = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 2.00000000E+00, 5.00000000E-01, -2.00000000E+00, -5.00000000E-01)*_fp.x;\n"
"    _a0178 = _r0114.wxyz - _r0114;\n"
"    _TMP175 = abs(_a0178);\n"
"    _TMP21 = bvec4(_TMP175.x < 1.50000000E+01, _TMP175.y < 1.50000000E+01, _TMP175.z < 1.50000000E+01, _TMP175.w < 1.50000000E+01);\n"
"    _a0184 = _r0114.wxyz - _r0124;\n"
"    _TMP181 = abs(_a0184);\n"
"    _TMP22 = bvec4(_TMP181.x < 1.50000000E+01, _TMP181.y < 1.50000000E+01, _TMP181.z < 1.50000000E+01, _TMP181.w < 1.50000000E+01);\n"
"    _a0190 = _r0114.zwxy - _r0114.yzwx;\n"
"    _TMP187 = abs(_a0190);\n"
"    _TMP23 = bvec4(_TMP187.x < 1.50000000E+01, _TMP187.y < 1.50000000E+01, _TMP187.z < 1.50000000E+01, _TMP187.w < 1.50000000E+01);\n"
"    _a0196 = _r0114.zwxy - _r0124.zwxy;\n"
"    _TMP193 = abs(_a0196);\n"
"    _TMP24 = bvec4(_TMP193.x < 1.50000000E+01, _TMP193.y < 1.50000000E+01, _TMP193.z < 1.50000000E+01, _TMP193.w < 1.50000000E+01);\n"
"    _a0202 = _r0134 - _r0124.wxyz;\n"
"    _TMP199 = abs(_a0202);\n"
"    _TMP25 = bvec4(_TMP199.x < 1.50000000E+01, _TMP199.y < 1.50000000E+01, _TMP199.z < 1.50000000E+01, _TMP199.w < 1.50000000E+01);\n"
"    _a0208 = _r0114.wxyz - _r0164.yzwx;\n"
"    _TMP205 = abs(_a0208);\n"
"    _TMP26 = bvec4(_TMP205.x < 1.50000000E+01, _TMP205.y < 1.50000000E+01, _TMP205.z < 1.50000000E+01, _TMP205.w < 1.50000000E+01);\n"
"    _a0214 = _r0114.wxyz - _r0144;\n"
"    _TMP211 = abs(_a0214);\n"
"    _TMP27 = bvec4(_TMP211.x < 1.50000000E+01, _TMP211.y < 1.50000000E+01, _TMP211.z < 1.50000000E+01, _TMP211.w < 1.50000000E+01);\n"
"    _a0220 = _r0114.zwxy - _r0164;\n"
"    _TMP217 = abs(_a0220);\n"
"    _TMP28 = bvec4(_TMP217.x < 1.50000000E+01, _TMP217.y < 1.50000000E+01, _TMP217.z < 1.50000000E+01, _TMP217.w < 1.50000000E+01);\n"
"    _a0226 = _r0114.zwxy - _r0154;\n"
"    _TMP223 = abs(_a0226);\n"
"    _TMP29 = bvec4(_TMP223.x < 1.50000000E+01, _TMP223.y < 1.50000000E+01, _TMP223.z < 1.50000000E+01, _TMP223.w < 1.50000000E+01);\n"
"    _a0232 = _r0134 - _r0124.zwxy;\n"
"    _TMP229 = abs(_a0232);\n"
"    _TMP30 = bvec4(_TMP229.x < 1.50000000E+01, _TMP229.y < 1.50000000E+01, _TMP229.z < 1.50000000E+01, _TMP229.w < 1.50000000E+01);\n"
"    _a0238 = _r0134 - _r0124;\n"
"    _TMP235 = abs(_a0238);\n"
"    _TMP31 = bvec4(_TMP235.x < 1.50000000E+01, _TMP235.y < 1.50000000E+01, _TMP235.z < 1.50000000E+01, _TMP235.w < 1.50000000E+01);\n"
"    _interp_restriction_lv1 = bvec4(_r0134.x != _r0114.w && _r0134.x != _r0114.z && (!_TMP21.x && !_TMP22.x || !_TMP23.x && !_TMP24.x || _TMP25.x && (!_TMP26.x && !_TMP27.x || !_TMP28.x && !_TMP29.x) || _TMP30.x || _TMP31.x), _r0134.y != _r0114.x && _r0134.y != _r0114.w && (!_TMP21.y && !_TMP22.y || !_TMP23.y && !_TMP24.y || _TMP25.y && (!_TMP26.y && !_TMP27.y || !_TMP28.y && !_TMP29.y) || _TMP30.y || _TMP31.y), _r0134.z != _r0114.y && _r0134.z != _r0114.x && (!_TMP21.z && !_TMP22.z || !_TMP23.z && !_TMP24.z || _TMP25.z && (!_TMP26.z && !_TMP27.z || !_TMP28.z && !_TMP29.z) || _TMP30.z || _TMP31.z), _r0134.w != _r0114.z && _r0134.w != _r0114.y && (!_TMP21.w && !_TMP22.w || !_TMP23.w && !_TMP24.w || _TMP25.w && (!_TMP26.w && !_TMP27.w || !_TMP28.w && !_TMP29.w) || _TMP30.w || _TMP31.w));\n"
"    _interp_restriction_lv2_left = bvec4(_r0134.x != _r0124.z && _r0114.y != _r0124.z, _r0134.y != _r0124.w && _r0114.z != _r0124.w, _r0134.z != _r0124.x && _r0114.w != _r0124.x, _r0134.w != _r0124.y && _r0114.x != _r0124.y);\n"
"    _interp_restriction_lv2_up = bvec4(_r0134.x != _r0124.x && _r0114.x != _r0124.x, _r0134.y != _r0124.y && _r0114.y != _r0124.y, _r0134.z != _r0124.z && _r0114.z != _r0124.z, _r0134.w != _r0124.w && _r0114.w != _r0124.w);\n"
"    _x0240 = (_fx + vec4( 5.00000000E-01, 5.00000000E-01, 5.00000000E-01, 5.00000000E-01)) - vec4( 1.50000000E+00, 5.00000000E-01, -5.00000000E-01, 5.00000000E-01);\n"
"    _TMP55 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0240);\n"
"    _TMP241 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP55);\n"
"    _x0248 = ((_fx_left + vec4( 2.50000000E-01, 5.00000000E-01, 2.50000000E-01, 5.00000000E-01)) - vec4( 1.00000000E+00, 1.00000000E+00, -5.00000000E-01, 0.00000000E+00))/vec4( 5.00000000E-01, 1.00000000E+00, 5.00000000E-01, 1.00000000E+00);\n"
"    _TMP55 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0248);\n"
"    _TMP249 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP55);\n"
"    _x0256 = ((_fx_up + vec4( 5.00000000E-01, 2.50000000E-01, 5.00000000E-01, 2.50000000E-01)) - vec4( 2.00000000E+00, 0.00000000E+00, -1.00000000E+00, 5.00000000E-01))/vec4( 1.00000000E+00, 5.00000000E-01, 1.00000000E+00, 5.00000000E-01);\n"
"    _TMP55 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0256);\n"
"    _TMP257 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP55);\n"
"    _a0268 = _r0134 - _r0124;\n"
"    _TMP265 = abs(_a0268);\n"
"    _a0272 = _r0134 - _r0124.zwxy;\n"
"    _TMP269 = abs(_a0272);\n"
"    _a0276 = _r0124.wxyz - _r0164;\n"
"    _TMP273 = abs(_a0276);\n"
"    _a0280 = _r0124.wxyz - _r0164.yzwx;\n"
"    _TMP277 = abs(_a0280);\n"
"    _a0284 = _r0114.zwxy - _r0114.wxyz;\n"
"    _TMP281 = abs(_a0284);\n"
"    _TMP32 = _TMP265 + _TMP269 + _TMP273 + _TMP277 + 4.00000000E+00*_TMP281;\n"
"    _a0290 = _r0114.zwxy - _r0114.yzwx;\n"
"    _TMP287 = abs(_a0290);\n"
"    _a0294 = _r0114.zwxy - _r0154;\n"
"    _TMP291 = abs(_a0294);\n"
"    _a0298 = _r0114.wxyz - _r0144;\n"
"    _TMP295 = abs(_a0298);\n"
"    _a0302 = _r0114.wxyz - _r0114;\n"
"    _TMP299 = abs(_a0302);\n"
"    _a0306 = _r0134 - _r0124.wxyz;\n"
"    _TMP303 = abs(_a0306);\n"
"    _TMP33 = _TMP287 + _TMP291 + _TMP295 + _TMP299 + 4.00000000E+00*_TMP303;\n"
"    _edr = bvec4(_TMP32.x < _TMP33.x && _interp_restriction_lv1.x, _TMP32.y < _TMP33.y && _interp_restriction_lv1.y, _TMP32.z < _TMP33.z && _interp_restriction_lv1.z, _TMP32.w < _TMP33.w && _interp_restriction_lv1.w);\n"
"    _a0310 = _r0114.wxyz - _r0124.zwxy;\n"
"    _TMP307 = abs(_a0310);\n"
"    _a0314 = _r0114.zwxy - _r0124;\n"
"    _TMP311 = abs(_a0314);\n"
"    _edr_left = bvec4((2.00000000E+00*_TMP307).x <= _TMP311.x && _interp_restriction_lv2_left.x && _edr.x, (2.00000000E+00*_TMP307).y <= _TMP311.y && _interp_restriction_lv2_left.y && _edr.y, (2.00000000E+00*_TMP307).z <= _TMP311.z && _interp_restriction_lv2_left.z && _edr.z, (2.00000000E+00*_TMP307).w <= _TMP311.w && _interp_restriction_lv2_left.w && _edr.w);\n"
"    _a0318 = _r0114.wxyz - _r0124.zwxy;\n"
"    _TMP315 = abs(_a0318);\n"
"    _a0322 = _r0114.zwxy - _r0124;\n"
"    _TMP319 = abs(_a0322);\n"
"    _edr_up = bvec4(_TMP315.x >= (2.00000000E+00*_TMP319).x && _interp_restriction_lv2_up.x && _edr.x, _TMP315.y >= (2.00000000E+00*_TMP319).y && _interp_restriction_lv2_up.y && _edr.y, _TMP315.z >= (2.00000000E+00*_TMP319).z && _interp_restriction_lv2_up.z && _edr.z, _TMP315.w >= (2.00000000E+00*_TMP319).w && _interp_restriction_lv2_up.w && _edr.w);\n"
"    _fx45 = vec4(float(_edr.x), float(_edr.y), float(_edr.z), float(_edr.w))*_TMP241;\n"
"    _fx30 = vec4(float(_edr_left.x), float(_edr_left.y), float(_edr_left.z), float(_edr_left.w))*_TMP249;\n"
"    _fx60 = vec4(float(_edr_up.x), float(_edr_up.y), float(_edr_up.z), float(_edr_up.w))*_TMP257;\n"
"    _a0326 = _r0134 - _r0114.wxyz;\n"
"    _TMP323 = abs(_a0326);\n"
"    _a0330 = _r0134 - _r0114.zwxy;\n"
"    _TMP327 = abs(_a0330);\n"
"    _px = bvec4(_TMP323.x <= _TMP327.x, _TMP323.y <= _TMP327.y, _TMP323.z <= _TMP327.z, _TMP323.w <= _TMP327.w);\n"
"    _TMP40 = max(_fx30, _fx60);\n"
"    _maximo = max(_TMP40, _fx45);\n"
"    _t0336 = float(_px.x);\n"
"    _TMP41 = _TMP10.xyz + _t0336*(_TMP8.xyz - _TMP10.xyz);\n"
"    _TMP42 = _TMP7.xyz + _maximo.x*(_TMP41 - _TMP7.xyz);\n"
"    _t0340 = float(_px.y);\n"
"    _TMP43 = _TMP8.xyz + _t0340*(_TMP4.xyz - _TMP8.xyz);\n"
"    _TMP44 = _TMP7.xyz + _maximo.y*(_TMP43 - _TMP7.xyz);\n"
"    _t0344 = float(_px.z);\n"
"    _TMP45 = _TMP4.xyz + _t0344*(_TMP6.xyz - _TMP4.xyz);\n"
"    _TMP46 = _TMP7.xyz + _maximo.z*(_TMP45 - _TMP7.xyz);\n"
"    _t0348 = float(_px.w);\n"
"    _TMP47 = _TMP6.xyz + _t0348*(_TMP10.xyz - _TMP6.xyz);\n"
"    _TMP48 = _TMP7.xyz + _maximo.w*(_TMP47 - _TMP7.xyz);\n"
"    _r0352.x = dot(_TMP42, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0352.y = dot(_TMP44, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0352.z = dot(_TMP46, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0352.w = dot(_TMP48, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _a0364 = _r0352 - _r0134;\n"
"    _TMP361 = abs(_a0364);\n"
"    _res = _TMP42;\n"
"    _mx = _TMP361.x;\n"
"    if (_TMP361.y > _TMP361.x) { \n"
"        _res = _TMP44;\n"
"        _mx = _TMP361.y;\n"
"    } \n"
"    if (_TMP361.z > _mx) { \n"
"        _res = _TMP46;\n"
"        _mx = _TMP361.z;\n"
"    } \n"
"    if (_TMP361.w > _mx) { \n"
"        _res = _TMP48;\n"
"    } \n"
"    _ret_0 = vec4(_res.x, _res.y, _res.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
