{
"// GLSL shader autogenerated by cg2glsl.py.\n"
"#if defined(VERTEX)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING out\n"
"#define COMPAT_ATTRIBUTE in\n"
"#define COMPAT_TEXTURE texture\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define COMPAT_ATTRIBUTE attribute\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord1;\n"
"COMPAT_VARYING     vec4 _color1;\n"
"COMPAT_VARYING     vec4 _position1;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _position1;\n"
"    vec4 _color1;\n"
"    vec2 _texCoord1;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"out_vertex _ret_0;\n"
"input_dummy _IN1;\n"
"vec4 _r0008;\n"
"COMPAT_ATTRIBUTE vec4 VertexCoord;\n"
"COMPAT_ATTRIBUTE vec4 COLOR;\n"
"COMPAT_ATTRIBUTE vec4 TexCoord;\n"
"COMPAT_VARYING vec4 COL0;\n"
"COMPAT_VARYING vec4 TEX0;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform mat4 MVPMatrix;\n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    out_vertex _OUT;\n"
"    vec2 _ps;\n"
"    _r0008 = VertexCoord.x*MVPMatrix[0];\n"
"    _r0008 = _r0008 + VertexCoord.y*MVPMatrix[1];\n"
"    _r0008 = _r0008 + VertexCoord.z*MVPMatrix[2];\n"
"    _r0008 = _r0008 + VertexCoord.w*MVPMatrix[3];\n"
"    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);\n"
"    _OUT._t1 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -2.00000000E+00*_ps.y);\n"
"    _OUT._t2 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, -_ps.y);\n"
"    _OUT._t3 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 0.00000000E+00);\n"
"    _OUT._t4 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, _ps.y);\n"
"    _OUT._t5 = TexCoord.xxxy + vec4(-_ps.x, 0.00000000E+00, _ps.x, 2.00000000E+00*_ps.y);\n"
"    _OUT._t6 = TexCoord.xyyy + vec4(-2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);\n"
"    _OUT._t7 = TexCoord.xyyy + vec4(2.00000000E+00*_ps.x, -_ps.y, 0.00000000E+00, _ps.y);\n"
"    _ret_0._position1 = _r0008;\n"
"    _ret_0._color1 = COLOR;\n"
"    _ret_0._texCoord1 = TexCoord.xy;\n"
"    _ret_0._t1 = _OUT._t1;\n"
"    _ret_0._t2 = _OUT._t2;\n"
"    _ret_0._t3 = _OUT._t3;\n"
"    _ret_0._t4 = _OUT._t4;\n"
"    _ret_0._t5 = _OUT._t5;\n"
"    _ret_0._t6 = _OUT._t6;\n"
"    _ret_0._t7 = _OUT._t7;\n"
"    gl_Position = _r0008;\n"
"    COL0 = COLOR;\n"
"    TEX0.xy = TexCoord.xy;\n"
"    TEX1 = _OUT._t1;\n"
"    TEX2 = _OUT._t2;\n"
"    TEX3 = _OUT._t3;\n"
"    TEX4 = _OUT._t4;\n"
"    TEX5 = _OUT._t5;\n"
"    TEX6 = _OUT._t6;\n"
"    TEX7 = _OUT._t7;\n"
"    return;\n"
"    COL0 = _ret_0._color1;\n"
"    TEX0.xy = _ret_0._texCoord1;\n"
"    TEX1 = _ret_0._t1;\n"
"    TEX2 = _ret_0._t2;\n"
"    TEX3 = _ret_0._t3;\n"
"    TEX4 = _ret_0._t4;\n"
"    TEX5 = _ret_0._t5;\n"
"    TEX6 = _ret_0._t6;\n"
"    TEX7 = _ret_0._t7;\n"
"} \n"
"#elif defined(FRAGMENT)\n"
"\n"
"#if __VERSION__ >= 130\n"
"#define COMPAT_VARYING in\n"
"#define COMPAT_TEXTURE texture\n"
"out vec4 FragColor;\n"
"#else\n"
"#define COMPAT_VARYING varying\n"
"#define FragColor gl_FragColor\n"
"#define COMPAT_TEXTURE texture2D\n"
"#endif\n"
"\n"
"#ifdef GL_ES\n"
"#ifdef GL_FRAGMENT_PRECISION_HIGH\n"
"precision highp float;\n"
"#else\n"
"precision mediump float;\n"
"#endif\n"
"#define COMPAT_PRECISION mediump\n"
"#else\n"
"#define COMPAT_PRECISION\n"
"#endif\n"
"COMPAT_VARYING     vec4 _t7;\n"
"COMPAT_VARYING     vec4 _t6;\n"
"COMPAT_VARYING     vec4 _t5;\n"
"COMPAT_VARYING     vec4 _t4;\n"
"COMPAT_VARYING     vec4 _t3;\n"
"COMPAT_VARYING     vec4 _t2;\n"
"COMPAT_VARYING     vec4 _t1;\n"
"COMPAT_VARYING     vec2 _texCoord;\n"
"COMPAT_VARYING     vec4 _color;\n"
"COMPAT_VARYING     float _frame_rotation;\n"
"struct input_dummy {\n"
"    vec2 _video_size;\n"
"    vec2 _texture_size;\n"
"    vec2 _output_dummy_size;\n"
"    float _frame_count;\n"
"    float _frame_direction;\n"
"    float _frame_rotation;\n"
"};\n"
"struct out_vertex {\n"
"    vec4 _color;\n"
"    vec2 _texCoord;\n"
"    vec4 _t1;\n"
"    vec4 _t2;\n"
"    vec4 _t3;\n"
"    vec4 _t4;\n"
"    vec4 _t5;\n"
"    vec4 _t6;\n"
"    vec4 _t7;\n"
"};\n"
"vec4 _ret_0;\n"
"vec3 _TMP45;\n"
"vec4 _TMP33;\n"
"vec4 _TMP32;\n"
"bvec4 _TMP31;\n"
"bvec4 _TMP30;\n"
"bvec4 _TMP29;\n"
"bvec4 _TMP28;\n"
"bvec4 _TMP27;\n"
"bvec4 _TMP26;\n"
"bvec4 _TMP25;\n"
"bvec4 _TMP24;\n"
"bvec4 _TMP23;\n"
"bvec4 _TMP22;\n"
"bvec4 _TMP21;\n"
"vec4 _TMP20;\n"
"vec4 _TMP19;\n"
"vec4 _TMP18;\n"
"vec4 _TMP17;\n"
"vec4 _TMP16;\n"
"vec4 _TMP15;\n"
"vec4 _TMP14;\n"
"vec4 _TMP13;\n"
"vec4 _TMP12;\n"
"vec4 _TMP11;\n"
"vec4 _TMP10;\n"
"vec4 _TMP9;\n"
"vec4 _TMP8;\n"
"vec4 _TMP7;\n"
"vec4 _TMP6;\n"
"vec4 _TMP5;\n"
"vec4 _TMP4;\n"
"vec4 _TMP3;\n"
"vec4 _TMP2;\n"
"vec4 _TMP1;\n"
"vec4 _TMP0;\n"
"uniform sampler2D Texture;\n"
"vec4 _r0101;\n"
"vec4 _r0111;\n"
"vec4 _r0121;\n"
"vec4 _r0131;\n"
"vec4 _r0141;\n"
"vec4 _r0151;\n"
"vec4 _TMP162;\n"
"vec4 _a0165;\n"
"vec4 _TMP168;\n"
"vec4 _a0171;\n"
"vec4 _TMP174;\n"
"vec4 _a0177;\n"
"vec4 _TMP180;\n"
"vec4 _a0183;\n"
"vec4 _TMP186;\n"
"vec4 _a0189;\n"
"vec4 _TMP192;\n"
"vec4 _a0195;\n"
"vec4 _TMP198;\n"
"vec4 _a0201;\n"
"vec4 _TMP204;\n"
"vec4 _a0207;\n"
"vec4 _TMP210;\n"
"vec4 _a0213;\n"
"vec4 _TMP216;\n"
"vec4 _a0219;\n"
"vec4 _TMP222;\n"
"vec4 _a0225;\n"
"vec4 _TMP228;\n"
"vec4 _a0231;\n"
"vec4 _TMP232;\n"
"vec4 _a0235;\n"
"vec4 _TMP236;\n"
"vec4 _a0239;\n"
"vec4 _TMP240;\n"
"vec4 _a0243;\n"
"vec4 _TMP244;\n"
"vec4 _a0247;\n"
"vec4 _TMP250;\n"
"vec4 _a0253;\n"
"vec4 _TMP254;\n"
"vec4 _a0257;\n"
"vec4 _TMP258;\n"
"vec4 _a0261;\n"
"vec4 _TMP262;\n"
"vec4 _a0265;\n"
"vec4 _TMP266;\n"
"vec4 _a0269;\n"
"vec4 _TMP270;\n"
"vec4 _a0273;\n"
"vec4 _TMP274;\n"
"vec4 _a0277;\n"
"vec4 _TMP278;\n"
"vec4 _a0281;\n"
"vec4 _TMP282;\n"
"vec4 _a0285;\n"
"vec4 _a0287;\n"
"vec4 _a0289;\n"
"vec4 _a0291;\n"
"vec3 _x0295;\n"
"vec3 _TMP296;\n"
"COMPAT_VARYING vec4 TEX1;\n"
"COMPAT_VARYING vec4 TEX2;\n"
"COMPAT_VARYING vec4 TEX3;\n"
"COMPAT_VARYING vec4 TEX4;\n"
"COMPAT_VARYING vec4 TEX5;\n"
"COMPAT_VARYING vec4 TEX6;\n"
"COMPAT_VARYING vec4 TEX7;\n"
" \n"
"uniform int FrameDirection;\n"
"uniform int FrameCount;\n"
"uniform COMPAT_PRECISION vec2 OutputSize;\n"
"uniform COMPAT_PRECISION vec2 TextureSize;\n"
"uniform COMPAT_PRECISION vec2 InputSize;\n"
"void main()\n"
"{\n"
"    bvec4 _edr;\n"
"    bvec4 _edr_left;\n"
"    bvec4 _edr_up;\n"
"    bvec4 _interp_restriction_lv1;\n"
"    bvec4 _interp_restriction_lv2_left;\n"
"    bvec4 _interp_restriction_lv2_up;\n"
"    vec3 _info;\n"
"    _TMP0 = COMPAT_TEXTURE(Texture, TEX1.xw);\n"
"    _TMP1 = COMPAT_TEXTURE(Texture, TEX1.yw);\n"
"    _TMP2 = COMPAT_TEXTURE(Texture, TEX1.zw);\n"
"    _TMP3 = COMPAT_TEXTURE(Texture, TEX2.xw);\n"
"    _TMP4 = COMPAT_TEXTURE(Texture, TEX2.yw);\n"
"    _TMP5 = COMPAT_TEXTURE(Texture, TEX2.zw);\n"
"    _TMP6 = COMPAT_TEXTURE(Texture, TEX3.xw);\n"
"    _TMP7 = COMPAT_TEXTURE(Texture, TEX3.yw);\n"
"    _TMP8 = COMPAT_TEXTURE(Texture, TEX3.zw);\n"
"    _TMP9 = COMPAT_TEXTURE(Texture, TEX4.xw);\n"
"    _TMP10 = COMPAT_TEXTURE(Texture, TEX4.yw);\n"
"    _TMP11 = COMPAT_TEXTURE(Texture, TEX4.zw);\n"
"    _TMP12 = COMPAT_TEXTURE(Texture, TEX5.xw);\n"
"    _TMP13 = COMPAT_TEXTURE(Texture, TEX5.yw);\n"
"    _TMP14 = COMPAT_TEXTURE(Texture, TEX5.zw);\n"
"    _TMP15 = COMPAT_TEXTURE(Texture, TEX6.xy);\n"
"    _TMP16 = COMPAT_TEXTURE(Texture, TEX6.xz);\n"
"    _TMP17 = COMPAT_TEXTURE(Texture, TEX6.xw);\n"
"    _TMP18 = COMPAT_TEXTURE(Texture, TEX7.xy);\n"
"    _TMP19 = COMPAT_TEXTURE(Texture, TEX7.xz);\n"
"    _TMP20 = COMPAT_TEXTURE(Texture, TEX7.xw);\n"
"    _r0101.x = dot(_TMP4.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0101.y = dot(_TMP6.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0101.z = dot(_TMP10.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0101.w = dot(_TMP8.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0111.x = dot(_TMP5.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0111.y = dot(_TMP3.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0111.z = dot(_TMP9.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0111.w = dot(_TMP11.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0121.x = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0121.y = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0121.z = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0121.w = dot(_TMP7.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0131.x = dot(_TMP20.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0131.y = dot(_TMP2.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0131.z = dot(_TMP15.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0131.w = dot(_TMP12.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0141.x = dot(_TMP14.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0141.y = dot(_TMP18.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0141.z = dot(_TMP0.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0141.w = dot(_TMP17.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0151.x = dot(_TMP13.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0151.y = dot(_TMP19.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0151.z = dot(_TMP1.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _r0151.w = dot(_TMP16.xyz, vec3( 1.43519993E+01, 2.81760006E+01, 5.47200012E+00));\n"
"    _a0165 = _r0101.wxyz - _r0101;\n"
"    _TMP162 = abs(_a0165);\n"
"    _TMP21 = bvec4(_TMP162.x < 1.50000000E+01, _TMP162.y < 1.50000000E+01, _TMP162.z < 1.50000000E+01, _TMP162.w < 1.50000000E+01);\n"
"    _a0171 = _r0101.wxyz - _r0111;\n"
"    _TMP168 = abs(_a0171);\n"
"    _TMP22 = bvec4(_TMP168.x < 1.50000000E+01, _TMP168.y < 1.50000000E+01, _TMP168.z < 1.50000000E+01, _TMP168.w < 1.50000000E+01);\n"
"    _a0177 = _r0101.zwxy - _r0101.yzwx;\n"
"    _TMP174 = abs(_a0177);\n"
"    _TMP23 = bvec4(_TMP174.x < 1.50000000E+01, _TMP174.y < 1.50000000E+01, _TMP174.z < 1.50000000E+01, _TMP174.w < 1.50000000E+01);\n"
"    _a0183 = _r0101.zwxy - _r0111.zwxy;\n"
"    _TMP180 = abs(_a0183);\n"
"    _TMP24 = bvec4(_TMP180.x < 1.50000000E+01, _TMP180.y < 1.50000000E+01, _TMP180.z < 1.50000000E+01, _TMP180.w < 1.50000000E+01);\n"
"    _a0189 = _r0121 - _r0111.wxyz;\n"
"    _TMP186 = abs(_a0189);\n"
"    _TMP25 = bvec4(_TMP186.x < 1.50000000E+01, _TMP186.y < 1.50000000E+01, _TMP186.z < 1.50000000E+01, _TMP186.w < 1.50000000E+01);\n"
"    _a0195 = _r0101.wxyz - _r0151.yzwx;\n"
"    _TMP192 = abs(_a0195);\n"
"    _TMP26 = bvec4(_TMP192.x < 1.50000000E+01, _TMP192.y < 1.50000000E+01, _TMP192.z < 1.50000000E+01, _TMP192.w < 1.50000000E+01);\n"
"    _a0201 = _r0101.wxyz - _r0131;\n"
"    _TMP198 = abs(_a0201);\n"
"    _TMP27 = bvec4(_TMP198.x < 1.50000000E+01, _TMP198.y < 1.50000000E+01, _TMP198.z < 1.50000000E+01, _TMP198.w < 1.50000000E+01);\n"
"    _a0207 = _r0101.zwxy - _r0151;\n"
"    _TMP204 = abs(_a0207);\n"
"    _TMP28 = bvec4(_TMP204.x < 1.50000000E+01, _TMP204.y < 1.50000000E+01, _TMP204.z < 1.50000000E+01, _TMP204.w < 1.50000000E+01);\n"
"    _a0213 = _r0101.zwxy - _r0141;\n"
"    _TMP210 = abs(_a0213);\n"
"    _TMP29 = bvec4(_TMP210.x < 1.50000000E+01, _TMP210.y < 1.50000000E+01, _TMP210.z < 1.50000000E+01, _TMP210.w < 1.50000000E+01);\n"
"    _a0219 = _r0121 - _r0111.zwxy;\n"
"    _TMP216 = abs(_a0219);\n"
"    _TMP30 = bvec4(_TMP216.x < 1.50000000E+01, _TMP216.y < 1.50000000E+01, _TMP216.z < 1.50000000E+01, _TMP216.w < 1.50000000E+01);\n"
"    _a0225 = _r0121 - _r0111;\n"
"    _TMP222 = abs(_a0225);\n"
"    _TMP31 = bvec4(_TMP222.x < 1.50000000E+01, _TMP222.y < 1.50000000E+01, _TMP222.z < 1.50000000E+01, _TMP222.w < 1.50000000E+01);\n"
"    _interp_restriction_lv1 = bvec4(_r0121.x != _r0101.w && _r0121.x != _r0101.z && (!_TMP21.x && !_TMP22.x || !_TMP23.x && !_TMP24.x || _TMP25.x && (!_TMP26.x && !_TMP27.x || !_TMP28.x && !_TMP29.x) || _TMP30.x || _TMP31.x), _r0121.y != _r0101.x && _r0121.y != _r0101.w && (!_TMP21.y && !_TMP22.y || !_TMP23.y && !_TMP24.y || _TMP25.y && (!_TMP26.y && !_TMP27.y || !_TMP28.y && !_TMP29.y) || _TMP30.y || _TMP31.y), _r0121.z != _r0101.y && _r0121.z != _r0101.x && (!_TMP21.z && !_TMP22.z || !_TMP23.z && !_TMP24.z || _TMP25.z && (!_TMP26.z && !_TMP27.z || !_TMP28.z && !_TMP29.z) || _TMP30.z || _TMP31.z), _r0121.w != _r0101.z && _r0121.w != _r0101.y && (!_TMP21.w && !_TMP22.w || !_TMP23.w && !_TMP24.w || _TMP25.w && (!_TMP26.w && !_TMP27.w || !_TMP28.w && !_TMP29.w) || _TMP30.w || _TMP31.w));\n"
"    _interp_restriction_lv2_left = bvec4(_r0121.x != _r0111.z && _r0101.y != _r0111.z, _r0121.y != _r0111.w && _r0101.z != _r0111.w, _r0121.z != _r0111.x && _r0101.w != _r0111.x, _r0121.w != _r0111.y && _r0101.x != _r0111.y);\n"
"    _interp_restriction_lv2_up = bvec4(_r0121.x != _r0111.x && _r0101.x != _r0111.x, _r0121.y != _r0111.y && _r0101.y != _r0111.y, _r0121.z != _r0111.z && _r0101.z != _r0111.z, _r0121.w != _r0111.w && _r0101.w != _r0111.w);\n"
"    _a0231 = _r0121 - _r0111;\n"
"    _TMP228 = abs(_a0231);\n"
"    _a0235 = _r0121 - _r0111.zwxy;\n"
"    _TMP232 = abs(_a0235);\n"
"    _a0239 = _r0111.wxyz - _r0151;\n"
"    _TMP236 = abs(_a0239);\n"
"    _a0243 = _r0111.wxyz - _r0151.yzwx;\n"
"    _TMP240 = abs(_a0243);\n"
"    _a0247 = _r0101.zwxy - _r0101.wxyz;\n"
"    _TMP244 = abs(_a0247);\n"
"    _TMP32 = _TMP228 + _TMP232 + _TMP236 + _TMP240 + 4.00000000E+00*_TMP244;\n"
"    _a0253 = _r0101.zwxy - _r0101.yzwx;\n"
"    _TMP250 = abs(_a0253);\n"
"    _a0257 = _r0101.zwxy - _r0141;\n"
"    _TMP254 = abs(_a0257);\n"
"    _a0261 = _r0101.wxyz - _r0131;\n"
"    _TMP258 = abs(_a0261);\n"
"    _a0265 = _r0101.wxyz - _r0101;\n"
"    _TMP262 = abs(_a0265);\n"
"    _a0269 = _r0121 - _r0111.wxyz;\n"
"    _TMP266 = abs(_a0269);\n"
"    _TMP33 = _TMP250 + _TMP254 + _TMP258 + _TMP262 + 4.00000000E+00*_TMP266;\n"
"    _edr = bvec4(_TMP32.x < _TMP33.x && _interp_restriction_lv1.x, _TMP32.y < _TMP33.y && _interp_restriction_lv1.y, _TMP32.z < _TMP33.z && _interp_restriction_lv1.z, _TMP32.w < _TMP33.w && _interp_restriction_lv1.w);\n"
"    _a0273 = _r0101.wxyz - _r0111.zwxy;\n"
"    _TMP270 = abs(_a0273);\n"
"    _a0277 = _r0101.zwxy - _r0111;\n"
"    _TMP274 = abs(_a0277);\n"
"    _edr_left = bvec4((2.00000000E+00*_TMP270).x <= _TMP274.x && _interp_restriction_lv2_left.x && _edr.x, (2.00000000E+00*_TMP270).y <= _TMP274.y && _interp_restriction_lv2_left.y && _edr.y, (2.00000000E+00*_TMP270).z <= _TMP274.z && _interp_restriction_lv2_left.z && _edr.z, (2.00000000E+00*_TMP270).w <= _TMP274.w && _interp_restriction_lv2_left.w && _edr.w);\n"
"    _a0281 = _r0101.wxyz - _r0111.zwxy;\n"
"    _TMP278 = abs(_a0281);\n"
"    _a0285 = _r0101.zwxy - _r0111;\n"
"    _TMP282 = abs(_a0285);\n"
"    _edr_up = bvec4(_TMP278.x >= (2.00000000E+00*_TMP282).x && _interp_restriction_lv2_up.x && _edr.x, _TMP278.y >= (2.00000000E+00*_TMP282).y && _interp_restriction_lv2_up.y && _edr.y, _TMP278.z >= (2.00000000E+00*_TMP282).z && _interp_restriction_lv2_up.z && _edr.z, _TMP278.w >= (2.00000000E+00*_TMP282).w && _interp_restriction_lv2_up.w && _edr.w);\n"
"    _a0287 = vec4(float(_edr.x), float(_edr.y), float(_edr.z), float(_edr.w));\n"
"    _info.x = dot(_a0287, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));\n"
"    _a0289 = vec4(float(_edr_left.x), float(_edr_left.y), float(_edr_left.z), float(_edr_left.w));\n"
"    _info.y = dot(_a0289, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));\n"
"    _a0291 = vec4(float(_edr_up.x), float(_edr_up.y), float(_edr_up.z), float(_edr_up.w));\n"
"    _info.z = dot(_a0291, vec4( 8.00000000E+00, 4.00000000E+00, 2.00000000E+00, 1.00000000E+00));\n"
"    _x0295 = _info/vec3( 2.55000000E+02, 2.55000000E+02, 2.55000000E+02);\n"
"    _TMP45 = min(vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0295);\n"
"    _TMP296 = max(vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP45);\n"
"    _ret_0 = vec4(_TMP296.x, _TMP296.y, _TMP296.z, 1.00000000E+00);\n"
"    FragColor = _ret_0;\n"
"    return;\n"
"} \n"
"#endif\n"
},
